<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>wxx9248 的博客</title>
  
  <subtitle>wxx9248&#39;s Blog</subtitle>
  <link href="https://blog.wxx9248.tk/atom.xml" rel="self"/>
  
  <link href="https://blog.wxx9248.tk/"/>
  <updated>2021-06-29T08:35:55.399Z</updated>
  <id>https://blog.wxx9248.tk/</id>
  
  <author>
    <name>wxx9248</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>密码学基本概念与相关协议入门（长期更新）</title>
    <link href="https://blog.wxx9248.tk/2021/06/29/Cryptography-Introduction/"/>
    <id>https://blog.wxx9248.tk/2021/06/29/Cryptography-Introduction/</id>
    <published>2021-06-29T05:47:00.000Z</published>
    <updated>2021-06-29T08:35:55.399Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>一直想梳理一下密码学的基本概念，但是一直拖着没有搞。最近放假了，在回国前终于有点时间梳理一下零散的密码学知识，毕竟这些东西很基础，以后不论在哪里都会用到，即使我不从事密码学相关行业。<br />本篇主要介绍主要的密码学概念，以及具体的一些加、解密算法和它们的应用。</p><span id="more"></span><h1 id="0x01-密码学算法简介"><a class="markdownIt-Anchor" href="#0x01-密码学算法简介"></a> 0x01 密码学算法简介</h1><h2 id="种类划分"><a class="markdownIt-Anchor" href="#种类划分"></a> 种类划分</h2><ul><li><a href="#%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95">加密算法</a></li><li><a href="#%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95">摘要算法</a></li><li><a href="#%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%AE%97%E6%B3%95">消息认证算法</a></li><li><a href="#%E7%94%B5%E5%AD%90%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">电子签名算法</a></li><li><a href="#%E5%AF%86%E9%92%A5%E5%8D%8F%E5%95%86%E7%AE%97%E6%B3%95">密钥协商算法</a></li><li><a href="#%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%AE%97%E6%B3%95">伪随机数算法</a></li></ul><h2 id="加密算法"><a class="markdownIt-Anchor" href="#加密算法"></a> 加密算法</h2><h3 id="种类划分-2"><a class="markdownIt-Anchor" href="#种类划分-2"></a> 种类划分</h3><ul><li><p>按照<strong>有无密钥</strong>划分，加密算法可以分为两类：</p><ul><li>受限制的算法<ul><li>算法本身就是加密/解密的关键，需要被保护</li></ul></li><li>基于密钥的算法<ul><li>算法使用密钥对明文进行加密</li></ul></li></ul></li><li><p>按照<strong>密码体制</strong>划分，基于密钥的算法又可划分为两类：</p><ul><li><a href="#%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F">对称密码系统</a>（Symmetric Cryptography）</li><li><a href="#%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F">非对称密码系统</a>（Asymmetric Cryptography），又叫公钥密码系统（Public-key Cryptography）</li></ul></li><li><p>按照<strong>明文类型</strong>划分，对称密码系统还可以划分为两类：</p><ul><li><a href="#%E5%9D%97%E5%AF%86%E7%A0%81">块密码</a>，又叫分组密码（Block Cipher）</li><li><a href="#%E6%B5%81%E5%AF%86%E7%A0%81">流密码</a>（Stream Cipher）</li></ul></li></ul><h3 id="对称密码系统"><a class="markdownIt-Anchor" href="#对称密码系统"></a> 对称密码系统</h3><ul><li>在对称密码系统中，加密和解密使用的密钥是同一个。</li><li>设加密函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e(k,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，解密函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(k,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>分别为明文和密文，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>为密钥，则有：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><mi>e</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=e(k,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo>=</mo><mi>d</mi><mo stretchy="false">(</mo><mi>k</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=d(k,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p><h3 id="非对称密码系统"><a class="markdownIt-Anchor" href="#非对称密码系统"></a> 非对称密码系统</h3><ul><li>在对称密码系统中，加密和解密使用的密钥是不同的。<ul><li>公开的密钥称作公钥（Public Key），在加密算法中一般用于加密信息。</li><li>私有的密钥称作私钥（Private key），在加密算法中一般用于解密信息。</li></ul></li><li>设加密函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo stretchy="false">(</mo><msub><mi>k</mi><mi>e</mi></msub><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">e(k_e,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，解密函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo stretchy="false">(</mo><msub><mi>k</mi><mi>d</mi></msub><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d(k_d,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span>，其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>分别为明文和密文，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>e</mi></msub></mrow><annotation encoding="application/x-tex">k_e</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为公钥，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">k_d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为私钥，则有：</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><mi>e</mi><mo stretchy="false">(</mo><msub><mi>k</mi><mi>e</mi></msub><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=e(k_e,m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">e</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo>=</mo><mi>d</mi><mo stretchy="false">(</mo><msub><mi>k</mi><mi>d</mi></msub><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=d(k_d,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></span></p><ul><li>一类非对称密码系统需要依赖一种难解的数学问题，目前具有实用性的有三种：<ul><li>整数分解问题，常见应用：<ul><li><a href="#RSA">RSA</a></li></ul></li><li>离散对数问题，常见应用：<ul><li><a href="#%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">数字签名算法</a></li></ul></li><li>椭圆曲线问题，常见应用：<ul><li><a href="#%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E5%8A%A0%E5%AF%86">椭圆曲线加密</a>算法</li><li><a href="#%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">椭圆曲线数字签名算法</a></li><li><a href="#%E7%88%B1%E5%BE%B7%E5%8D%8E%E6%9B%B2%E7%BA%BF%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">爱德华曲线数字签名算法</a></li><li><a href="#%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E8%BF%AA%E9%9D%9E-%E8%B5%AB%E5%B0%94%E6%9B%BC%E7%AE%97%E6%B3%95">椭圆曲线迪非-赫尔曼算法</a></li></ul></li></ul></li></ul><h3 id="块密码"><a class="markdownIt-Anchor" href="#块密码"></a> 块密码</h3><ul><li>块密码是对<strong>固定长度数据</strong>进行操作的对称密码系统，输入和输出数据均被表示为大小固定的方阵。</li><li>常见的现代块密码有：<ul><li><a href="#%E9%AB%98%E7%BA%A7%E5%8A%A0%E5%AF%86%E6%A0%87%E5%87%86">高级加密标准</a>（Advanced Encryption Standard, AES），由Rijndael算法当选，目前最常用、安全，且获得广泛硬件加速支持的块密码</li><li>部分RC系列<ul><li>RC6，AES候选算法</li><li>RC5</li><li><s>RC2</s>，已被破解</li></ul></li><li>Fish系列<ul><li>Twofish，AES候选算法</li><li>Threefish</li><li><s>Blowfish</s>，不推荐，因为块大小过小</li></ul></li><li>ARIA，KATS标准，RFC 5794</li><li>SM4，国密标准，CAS研发</li><li><s>数据加密标准（Data Encryption Standard, DES）</s>，已被破解<ul><li><s>3重DES（Triple DES）</s>，不推荐，只存在于老旧系统中</li></ul></li></ul></li><li>块密码的特性<ul><li>工作模式（Mode of Operation）<ul><li>块密码的输入和输出都是固定长度的，如果我们需要加密任意长的数据，就需要对输入和输出做分块处理。而组织块密码的输出为密文这一步，由块密码的<strong>工作模式</strong>指定。</li><li>块密码的工作模式大致分为两类：<ul><li>非认证型工作模式<ul><li>此类工作模式保证了消息的保密性，但是并未保证消息的真实性，即<strong>无法确认消息是否被篡改</strong>。<ul><li>非认证型工作模式仅输出明文对应的密文</li></ul></li><li>考虑此场景：<ul><li>Alice和Bob使用某块密码进行通信，而Eve此时截获了他们的通信，处于中间人的位置。</li><li>假设Alice给Bob发了一个加密的无格式纯字节流，Bob解密用这个字节流去干其他事情。</li><li>如果Eve对加密后的信息进行扰乱，那么Bob依然可以继续解密，但是解密出来的东西就不是Alice发给他的了。</li><li>而由于此字节流本身无格式，Bob也就无从判断这个字节流是否合法，也就不知道这个字节流到底是不是Alice原本想要发给他的那个。</li></ul></li><li>目前常见的非认证型工作模式有：<ul><li>电子密码本（Electronic Codebook, ECB）</li><li>密码块链接（Cipher-block Chaining, CBC）</li><li>明文密码块链接（Plaintext Cipher-block Chaining, PCBC）</li><li>密文反馈（Cipher Feedback, CFB）</li><li>输出反馈（Output Feedback, OFB）</li><li>计数器（Counter, CTR）</li></ul></li></ul></li><li>认证型工作模式（认证加密, Authenticated Encryption, AE）<ul><li>此类工作模式既保证了消息的保密性，又保证了消息的真实性。<ul><li>认证型工作模式不仅输出密文，同时根据发送方给出的一个密钥输出一个消息认证码（见 <a href="#%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%AE%97%E6%B3%95">消息认证算法</a>），接收方用MAC可以校验原消息是否被篡改。</li></ul></li><li>认证型工作模式大致分为三类：<ul><li>先加密，后生成MAC（Encrypt-then-MAC, EtM）<br /><img src="/images/Cryptography-Introduction/Authenticated_Encryption_EtM.png" alt="图片来源：Wikipedia" /><ul><li>安全性最高，前提是使用的MAC必须是强不可伪造</li></ul></li><li>先生成MAC，后加密（MAC-then-Encrypt, MtE)<br /><img src="/images/Cryptography-Introduction/Authenticated_Encryption_MtE.png" alt="图片来源：Wikipedia" /></li><li>生成MAC和加密分开进行（Encrypt-and-MAC, EaM）<br /><img src="/images/Cryptography-Introduction/Authenticated_Encryption_EaM.png" alt="图片来源：Wikipedia" /></li></ul></li><li>目前常见的认证型工作模式有：<ul><li>伽罗瓦/计数器模式（Galois/Counter Mode, GCM）<ul><li>GCM-SIV</li></ul></li><li>加密-认证-翻译（Encrypt-Authenticate-Translate, EAX）</li><li>Poly1305</li></ul></li></ul></li></ul></li></ul></li><li>填充模式（Padding）<ul><li>见 <a href="#%E5%A1%AB%E5%85%85%E6%A8%A1%E5%BC%8F">填充模式</a></li></ul></li></ul></li></ul><h3 id="流密码"><a class="markdownIt-Anchor" href="#流密码"></a> 流密码</h3><ul><li>流密码是对<strong>任意长度数据</strong>进行操作的对称密码系统，输入和输出数据均为字节流。</li><li>经典的流密码有：<ul><li>凯撒密码（Caesar Cipher），以及其衍生算法</li><li>简单异或加密（Simple XOR Cipher）</li></ul></li><li>常见的现代流密码有：<ul><li>ChaCha20，Salsa20变种</li><li><s>RC4</s>，已被破解</li></ul></li></ul><h2 id="摘要算法"><a class="markdownIt-Anchor" href="#摘要算法"></a> 摘要算法</h2><ul><li>摘要算法，又称密码学哈希算法、散列算法。摘要算法将一串明文映射为一个<strong>固定长度</strong>的、“唯一”的字符串，称为摘要（digest）。</li><li>摘要算法可以保证消息的<a href="#%E5%AE%8C%E6%95%B4%E6%80%A7">完整性</a>，但是不能保证消息的<a href="#%E7%9C%9F%E5%AE%9E%E6%80%A7">真实性</a>和<a href="#%E4%B8%8D%E5%8F%AF%E6%8A%B5%E8%B5%96%E6%80%A7">不可抵赖性</a>。</li><li>注意<ul><li>“唯一”被加上双引号，因为没有任何一个摘要算法能<strong>绝对</strong>地实现上述映射，也就是说，这个映射的“唯一性”必然只能存在于某个局部的“情境”之中。<ul><li>假如说，我需要存储一个网站下所有用户的密码，这就是所谓的“情境”，或者称为上下文（context）。</li><li>在这个上下文中，假设用户数量对于此摘要算法来说足够少。我们也只能说，在这个上下文中，我们可以将一个优良的摘要算法<strong>视为</strong>一一映射的。</li></ul></li><li>但也有几率，这个映射的“唯一性”被打破，即两个输入被映射到了同一个输出，此时我们称此摘要算法发生了<strong>碰撞</strong>（collision）。</li><li>碰撞是不可避免的，我们只能通过设计新摘要算法或优化已有摘要算法来降低碰撞的几率。<ul><li>摘要算法的定义域是任意字符串，而其值域仅包含<strong>固定长度</strong>的的字符串。对于这个映射过程，必然在定义域中存在某两个字符串，它们在值域上的映射相同。<ul><li>至于究竟为什么，也就是两个无穷集的基数（cardinality） 与一一映射问题，牵扯到集合论和测度论的知识，我无法用我现有的知识进行解释。</li></ul></li></ul></li><li>值得一提的是，摘要的这种“局部唯一”的思想在通用唯一标识符（Universally Unique Identifier, UUID），又称全局唯一标识符（Globally Unique Identifier, GUID）里也大有体现。</li></ul></li><li>抗碰撞性 (Collision Resistance, CR)<ul><li>分类<ul><li>弱抗碰撞性（Weak Collision Resistance），又称第二原象抗性（Second Preimage Resistance）<ul><li>对于一个摘要函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span>，给定一个任意<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，无法快速计算出一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo mathvariant="normal">≠</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \neq y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)=h(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>。</li></ul></li><li>强抗碰撞性（Strong Collision Resistance）<ul><li>对于一个摘要函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span>，无法快速找出一对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x,y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo mathvariant="normal">≠</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \neq y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span> 且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>h</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)=h(y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul></li><li>典型应用场景<ul><li>弱抗碰撞性经常需要用在身份验证的场合。假设我们知道用户密码的摘要值，现校验用户是否输入了正确的密码。我们此时需要此摘要函数至少具有弱抗碰撞性。</li><li>而如果我们使用摘要作为对象（例如文件）的标识符的话，我们要求此摘要函数具有强抗碰撞性。</li></ul></li></ul></li><li>常见摘要算法<ul><li>安全散列算法（Secure Hash Algorithm, SHA）系列<ul><li><a href="#SHA-3">SHA-3</a><ul><li>SHA3-224</li><li>SHA3-256</li><li>SHA3-384</li><li>SHA3-512</li><li>SHAKE128</li><li>SHAKE256</li></ul></li><li><a href="#SHA-2">SHA-2</a><ul><li>SHA-224</li><li>SHA-256</li><li>SHA-384</li><li>SHA-512</li></ul></li><li><s>SHA-1</s>，不安全</li></ul></li><li>消息摘要（Message Digest, MD）系列<ul><li>MD6，没有广泛应用</li><li><s>MD5</s>，已被破解</li><li><s>MD4</s>，已被破解</li><li><s>MD2</s>，不安全</li></ul></li></ul></li></ul><h2 id="消息认证算法"><a class="markdownIt-Anchor" href="#消息认证算法"></a> 消息认证算法</h2><ul><li>消息认证算法接受消息并额外接受一个给定的密钥，只有原消息和密钥均相同时才产生相同的输出。我们将消息认证算法的输出称为<strong>消息认证码</strong>（Message Authentication Code, MAC）。</li><li>认证步骤<ol><li>假设Alice要给Bob发一条消息，Bob想要知道这条消息是否为Alice发出的，且有没有被篡改。</li><li>Alice事先通过某种方式和Bob确定一个密钥和一个消息认证算法。</li><li>Alice使用预定的消息认证算法和密钥，为消息生成一个MAC。</li><li>Alice将消息和MAC同时发送给Bob。</li><li>Bob使用同样的消息认证算法和密钥，为消息生成一个MAC，如果此MAC和Alice发送的MAC一致，则验证通过。</li></ol></li><li>消息认证算法可以保证消息的<a href="#%E5%AE%8C%E6%95%B4%E6%80%A7">完整性</a>和消息的<a href="#%E7%9C%9F%E5%AE%9E%E6%80%A7">真实性</a>，但是不能保证消息的<a href="#%E4%B8%8D%E5%8F%AF%E6%8A%B5%E8%B5%96%E6%80%A7">不可抵赖性</a>。<ul><li>在上述情景，Bob可以自己用密钥伪造一个Alice从未发送过的消息，并声称Alice向他发送了此消息。</li></ul></li><li>常见消息认证算法<ul><li><a href="#%E6%95%A3%E5%88%97%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81">散列消息认证码</a>（Hash-based Message Authentication Code, HMAC）</li><li>Poly1305</li></ul></li></ul><h2 id="电子签名算法"><a class="markdownIt-Anchor" href="#电子签名算法"></a> 电子签名算法</h2><ul><li>注意，此处所说的电子签名算法为泛指，并非指<a href="#%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">数字签名算法</a>。</li><li>电子签名算法基于<a href="#%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%AF%86%E7%A0%81%E7%B3%BB%E7%BB%9F">非对称密码系统</a>。<ul><li>消息发送者使用私钥为一条消息生成签名，通常是对消息的散列值进行加密。</li><li>消息接收者使用公钥验证此消息的签名，通常是解密此签名，并比对结果是否和消息的散列值是否一致。</li></ul></li><li>电子签名算法可以保证消息的<a href="#%E5%AE%8C%E6%95%B4%E6%80%A7">完整性</a>、消息的<a href="#%E7%9C%9F%E5%AE%9E%E6%80%A7">真实性</a>和消息的<a href="#%E4%B8%8D%E5%8F%AF%E6%8A%B5%E8%B5%96%E6%80%A7">不可抵赖性</a>。</li><li>电子签名算法在接收方<strong>不能确定发送方公钥</strong>时，需要依赖<a href="#%E7%94%B5%E5%AD%90%E8%AF%81%E4%B9%A6">电子证书</a>体系，来形成签名的信任链。<ul><li>假设电子签名算法不使用电子证书，考虑以下情景：<ol><li>Alice准备向Bob发送一条消息，而此时他们的通信被Eve截获——Eve处于中间人的位置。</li><li>Alice事先生成了一副公、私钥对，并使用她的私钥为消息进行签名。</li><li>Alice将消息、签名和公钥一并发送给Bob。此时，Eve作为中间人截获了Alice的信息。</li><li>Eve篡改了Alice的消息，并用Eve自己的私钥对消息进行签名。</li><li>Eve将篡改的消息、签名和Eve自己的公钥发送给Bob。</li><li>Bob收到了消息后，发现消息、签名和公钥匹配，而无从察觉Eve篡改了消息。</li></ol></li><li>假设电子签名算法使用了电子证书，再考虑以下情景：<ol><li>Alice准备向Bob发送一条消息，而此时他们的通信被Eve截获——Eve处于中间人的位置。</li><li>Alice事先生成了一副公、私钥对，并将公钥提交给某个受信任的第三方进行签名，获得了一份有效的电子证书。</li><li>Alice使用她的私钥为消息进行签名。</li><li>Alice将消息、签名和证书一并发送给Bob。此时，Eve作为中间人截获了Alice的信息。</li><li>Eve篡改了Alice的消息，并用Eve自己的私钥对消息进行签名。</li><li>Eve将篡改的消息、签名和Eve自己的证书发送给Bob。</li><li>Bob收到了消息后：<ul><li>假设Eve使用了自签名证书，署名为Alice，那么Bob很容易发现Eve的证书是由某个不受信任的机构签名的，也就是说，Eve伪造的证书未构成信任链。此时，Bob有充分的理由拒绝此消息。</li><li>假设Eve也事先向一个受信任的第三方申请了一份证书，那么Bob很容易发现收到的证书的所有者是Eve，而非Alice。Bob也就可以确定，这条消息并非Alice所发送，而是由Eve所发。</li></ul></li></ol></li></ul></li><li>常见的电子签名算法有<ul><li><a href="#RSA">RSA</a></li><li><a href="#%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">数字签名算法</a>（Digital Signature Algorithm, DSA），变种有：<ul><li><a href="#%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">椭圆曲线数字签名算法</a> (Elliptic Curve Digital Signature Algorithm, ECDSA)</li><li><a href="#%E7%88%B1%E5%BE%B7%E5%8D%8E%E6%9B%B2%E7%BA%BF%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E7%AE%97%E6%B3%95">爱德华曲线数字签名算法</a>（Edwards-curve Digital Signature Algorithm, EdDSA）<ul><li><a href="#Ed25519">Ed25519</a></li><li>Ed448</li></ul></li></ul></li></ul></li></ul><h2 id="密钥协商算法"><a class="markdownIt-Anchor" href="#密钥协商算法"></a> 密钥协商算法</h2><ul><li>密钥协商算法使得通信双方可以在一个公开信道上确定一个密钥，而其他旁观者无法确定此密钥的具体值。</li><li>所有的密钥协商算法都基于<a href="#%E8%BF%AA%E9%9D%9E-%E8%B5%AB%E5%B0%94%E6%9B%BC%E7%AE%97%E6%B3%95">迪非-赫尔曼算法</a>（Diffie-Hellman Algorithm, DH），变种有：<ul><li><a href="#%E6%A4%AD%E5%9C%86%E6%9B%B2%E7%BA%BF%E8%BF%AA%E9%9D%9E-%E8%B5%AB%E5%B0%94%E6%9B%BC%E7%AE%97%E6%B3%95">椭圆曲线迪非-赫尔曼算法</a>（Elliptic Curve Diffie-Hellman Algorithm, ECDH）</li></ul></li></ul><h2 id="伪随机数算法"><a class="markdownIt-Anchor" href="#伪随机数算法"></a> 伪随机数算法</h2><ul><li>伪随机数算法生成统计学上分布均匀的伪随机数</li><li>一般地，伪随机数算法需要一个初始值来生成一个随机数序列，这个初始值被称为种子（seed）。</li><li>伪随机数算法评价标准（<a href="/assets/Cryptography-Introduction/Functionality-Classes-and-Evaluation-Methodology-for-Deterministic-Random-Number-Generators.pdf">参考文献</a>）<ul><li>K1 - 随机数序列种包含连续相同元素的可能性很低</li><li>K2 - 使用某些统计学方法，无法辨别产生的序列和真随机序列</li><li>K3 - 攻击者无法使用任意已生成的随机数序列或它们的子序列，计算或猜出后续的序列或者生成器的内部状态</li><li>K4 - 攻击者无法使用生成器的内部状态，计算或猜出之前的序列或者生成器之前的状态</li></ul></li><li>密码学安全的伪随机数算法需要满足K3和K4。</li></ul><h1 id="0x02-常用加密算法介绍"><a class="markdownIt-Anchor" href="#0x02-常用加密算法介绍"></a> 0x02 常用加密算法介绍</h1><h2 id="对称加密算法"><a class="markdownIt-Anchor" href="#对称加密算法"></a> 对称加密算法</h2><h3 id="高级加密标准"><a class="markdownIt-Anchor" href="#高级加密标准"></a> 高级加密标准</h3><ul><li>高级加密标准（AES）算法是目前普遍使用的对称加密算法，其获得了广泛的硬件加速支持，包括x86，ARM，RISC-V等在内。</li><li>AES硬件加速最主要且影响最为深远的作用是加速TLS协议，而TLS协议被广泛应用于各个现代Web站点。处理器支持AES指令集可使得网站访问快速且安全。</li><li>AES算法的完整定义在<a href="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf">FIPS-197</a>中。</li><li>算法简介<ul><li>AES的块长度为128-bit，密钥长度可选128-bit、192-bit和256-bit。<ul><li>值得一提的是，Rijndael算法本身<strong>还</strong>支持分组长度160-bit、192-bit、224-bit和256-bit，密钥长度160-bit、224-bit <s>，但都被NIST砍了</s>。</li></ul></li><li>AES包含四种基本操作，分别是：<ul><li><a href="#%E5%AD%97%E8%8A%82%E6%9B%BF%E4%BB%A3">字节替代</a>（<code>SubBytes</code>）</li><li><a href="#%E8%A1%8C%E7%A7%BB%E4%BD%8D">行移位</a>（<code>ShiftRows</code>）</li><li><a href="#%E5%88%97%E6%B7%B7%E6%B7%86">列混淆</a>（<code>MixColumns</code>）</li><li><a href="#%E8%BD%AE%E5%AF%86%E9%92%A5%E5%8A%A0">轮密钥加</a>（<code>AddRoundKey</code>）</li></ul></li><li>按照定义，AES的所有的矩阵元素均为按列排列的，即元素是从上到下，从左到右排列的。</li><li>AES的操作全部作用于一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mo>×</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">4 \times 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>的矩阵上，这个矩阵称为状态矩阵（State Matrix）。</li><li>AES对不同的密钥长度进行不同轮数的处理：<ul><li>AES-128处理10轮；</li><li>AES-192处理12轮；</li><li>AES-256处理14轮；</li></ul></li><li>对于一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">n_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>轮的AES加密过程，处理过程为下：<ul><li>先进行一次<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AddRoundKey</mtext></mrow><annotation encoding="application/x-tex">\text{AddRoundKey}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">AddRoundKey</span></span></span></span></span>，记为第0轮；</li><li>对于第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>轮，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{1, 2, ..., n_r - 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span><ul><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo mathvariant="normal">≠</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i \neq n_r - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>SubBytes</mtext></mrow><annotation encoding="application/x-tex">\text{SubBytes}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">SubBytes</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>ShiftRows</mtext></mrow><annotation encoding="application/x-tex">\text{ShiftRows}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">ShiftRows</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>MixColumns</mtext></mrow><annotation encoding="application/x-tex">\text{MixColumns}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">MixColumns</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AddRoundKey</mtext></mrow><annotation encoding="application/x-tex">\text{AddRoundKey}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">AddRoundKey</span></span></span></span></span></li></ul></li><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = n_r - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>SubBytes</mtext></mrow><annotation encoding="application/x-tex">\text{SubBytes}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">SubBytes</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>ShiftRows</mtext></mrow><annotation encoding="application/x-tex">\text{ShiftRows}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">ShiftRows</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AddRoundKey</mtext></mrow><annotation encoding="application/x-tex">\text{AddRoundKey}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">AddRoundKey</span></span></span></span></span></li></ul></li></ul></li></ul></li><li>对于一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">n_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>轮的AES解密过程，处理过程为下：<ul><li>先进行一次<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AddRoundKey</mtext></mrow><annotation encoding="application/x-tex">\text{AddRoundKey}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">AddRoundKey</span></span></span></span></span>，记为第0轮；</li><li>对于第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>轮，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{1, 2, ..., n_r - 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span><ul><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo mathvariant="normal">≠</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i \neq n_r - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>ShiftRows</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\text{ShiftRows}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8984479999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord text"><span class="mord">ShiftRows</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>SubBytes</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\text{SubBytes}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0928879999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord text"><span class="mord">SubBytes</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AddRoundKey</mtext></mrow><annotation encoding="application/x-tex">\text{AddRoundKey}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">AddRoundKey</span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>MixColumns</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\text{MixColumns}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8984479999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord text"><span class="mord">MixColumns</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li></ul></li><li>如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = n_r - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>ShiftRows</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\text{ShiftRows}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8984479999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord text"><span class="mord">ShiftRows</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>SubBytes</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\text{SubBytes}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0928879999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord text"><span class="mord">SubBytes</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>AddRoundKey</mtext></mrow><annotation encoding="application/x-tex">\text{AddRoundKey}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">AddRoundKey</span></span></span></span></span></li></ul></li></ul></li><li>其中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>表示逆函数。</li><li>注意，解密时轮密钥也必须是逆序使用的：即对于第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>轮加/解密，如果加密时使用第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>组轮密钥，那么解密时需要使用第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(n_r - i - 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>组轮密钥。</li></ul></li></ul></li></ul><h4 id="字节替代"><a class="markdownIt-Anchor" href="#字节替代"></a> 字节替代</h4><ul><li>S盒的构造方法请参见FIPS-197, Section 5.1.1。</li><li>S盒的使用：<ul><li>加密时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>SubBytes</mtext></mrow><annotation encoding="application/x-tex">\text{SubBytes}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord text"><span class="mord">SubBytes</span></span></span></span></span>通过S盒（S-Box）进行字节的映射，以增加算法的<strong>混淆性</strong>。</li><li>解密时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mtext>SubBytes</mtext><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\text{SubBytes}^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0928879999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord text"><span class="mord">SubBytes</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.14734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>使用逆S盒（Inverse S-Box），将映射后的字节恢复。</li><li>例如，现有字节<code>0x00</code>，我们将<code>0x00</code>作为S盒下标，得到映射为<code>0x63</code>；<code>0x63</code>再通过逆S盒，用同样的方法可以映射为<code>0x00</code>。</li></ul></li><li>S盒和逆S盒的内容：</li></ul><figure class="highlight c"><figcaption><span>SBox.h</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> AES_SBOX_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> AES_SBOX_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;inttypes.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// S-Box</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> S_BOX[<span class="number">256</span>] = &#123;</span><br><span class="line">    <span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">0x01</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>,</span><br><span class="line">    <span class="number">0xca</span>, <span class="number">0x82</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">0xfa</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">0xf0</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>,</span><br><span class="line">    <span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>,</span><br><span class="line">    <span class="number">0x04</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x9a</span>, <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>,</span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">0x6e</span>, <span class="number">0x5a</span>, <span class="number">0xa0</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0x00</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">0xbe</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">0xaa</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">0x02</span>, <span class="number">0x7f</span>, <span class="number">0x50</span>, <span class="number">0x3c</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>,</span><br><span class="line">    <span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">0xd2</span>,</span><br><span class="line">    <span class="number">0xcd</span>, <span class="number">0x0c</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">0x64</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">0xdc</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">0x46</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">0x14</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">0x0b</span>, <span class="number">0xdb</span>,</span><br><span class="line">    <span class="number">0xe0</span>, <span class="number">0x32</span>, <span class="number">0x3a</span>, <span class="number">0x0a</span>, <span class="number">0x49</span>, <span class="number">0x06</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>,</span><br><span class="line">    <span class="number">0xe7</span>, <span class="number">0xc8</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">0x08</span>,</span><br><span class="line">    <span class="number">0xba</span>, <span class="number">0x78</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">0xb4</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>,</span><br><span class="line">    <span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">0x03</span>, <span class="number">0xf6</span>, <span class="number">0x0e</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>,</span><br><span class="line">    <span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">0x1e</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">0x28</span>, <span class="number">0xdf</span>,</span><br><span class="line">    <span class="number">0x8c</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">0x0d</span>, <span class="number">0xbf</span>, <span class="number">0xe6</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">0x0f</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Inverse S-Box</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">uint8_t</span> S_BOX_INV[<span class="number">256</span>] = &#123;</span><br><span class="line">    <span class="number">0x52</span>, <span class="number">0x09</span>, <span class="number">0x6a</span>, <span class="number">0xd5</span>, <span class="number">0x30</span>, <span class="number">0x36</span>, <span class="number">0xa5</span>, <span class="number">0x38</span>, <span class="number">0xbf</span>, <span class="number">0x40</span>, <span class="number">0xa3</span>, <span class="number">0x9e</span>, <span class="number">0x81</span>, <span class="number">0xf3</span>, <span class="number">0xd7</span>, <span class="number">0xfb</span>,</span><br><span class="line">    <span class="number">0x7c</span>, <span class="number">0xe3</span>, <span class="number">0x39</span>, <span class="number">0x82</span>, <span class="number">0x9b</span>, <span class="number">0x2f</span>, <span class="number">0xff</span>, <span class="number">0x87</span>, <span class="number">0x34</span>, <span class="number">0x8e</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0xc4</span>, <span class="number">0xde</span>, <span class="number">0xe9</span>, <span class="number">0xcb</span>,</span><br><span class="line">    <span class="number">0x54</span>, <span class="number">0x7b</span>, <span class="number">0x94</span>, <span class="number">0x32</span>, <span class="number">0xa6</span>, <span class="number">0xc2</span>, <span class="number">0x23</span>, <span class="number">0x3d</span>, <span class="number">0xee</span>, <span class="number">0x4c</span>, <span class="number">0x95</span>, <span class="number">0x0b</span>, <span class="number">0x42</span>, <span class="number">0xfa</span>, <span class="number">0xc3</span>, <span class="number">0x4e</span>,</span><br><span class="line">    <span class="number">0x08</span>, <span class="number">0x2e</span>, <span class="number">0xa1</span>, <span class="number">0x66</span>, <span class="number">0x28</span>, <span class="number">0xd9</span>, <span class="number">0x24</span>, <span class="number">0xb2</span>, <span class="number">0x76</span>, <span class="number">0x5b</span>, <span class="number">0xa2</span>, <span class="number">0x49</span>, <span class="number">0x6d</span>, <span class="number">0x8b</span>, <span class="number">0xd1</span>, <span class="number">0x25</span>,</span><br><span class="line">    <span class="number">0x72</span>, <span class="number">0xf8</span>, <span class="number">0xf6</span>, <span class="number">0x64</span>, <span class="number">0x86</span>, <span class="number">0x68</span>, <span class="number">0x98</span>, <span class="number">0x16</span>, <span class="number">0xd4</span>, <span class="number">0xa4</span>, <span class="number">0x5c</span>, <span class="number">0xcc</span>, <span class="number">0x5d</span>, <span class="number">0x65</span>, <span class="number">0xb6</span>, <span class="number">0x92</span>,</span><br><span class="line">    <span class="number">0x6c</span>, <span class="number">0x70</span>, <span class="number">0x48</span>, <span class="number">0x50</span>, <span class="number">0xfd</span>, <span class="number">0xed</span>, <span class="number">0xb9</span>, <span class="number">0xda</span>, <span class="number">0x5e</span>, <span class="number">0x15</span>, <span class="number">0x46</span>, <span class="number">0x57</span>, <span class="number">0xa7</span>, <span class="number">0x8d</span>, <span class="number">0x9d</span>, <span class="number">0x84</span>,</span><br><span class="line">    <span class="number">0x90</span>, <span class="number">0xd8</span>, <span class="number">0xab</span>, <span class="number">0x00</span>, <span class="number">0x8c</span>, <span class="number">0xbc</span>, <span class="number">0xd3</span>, <span class="number">0x0a</span>, <span class="number">0xf7</span>, <span class="number">0xe4</span>, <span class="number">0x58</span>, <span class="number">0x05</span>, <span class="number">0xb8</span>, <span class="number">0xb3</span>, <span class="number">0x45</span>, <span class="number">0x06</span>,</span><br><span class="line">    <span class="number">0xd0</span>, <span class="number">0x2c</span>, <span class="number">0x1e</span>, <span class="number">0x8f</span>, <span class="number">0xca</span>, <span class="number">0x3f</span>, <span class="number">0x0f</span>, <span class="number">0x02</span>, <span class="number">0xc1</span>, <span class="number">0xaf</span>, <span class="number">0xbd</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x13</span>, <span class="number">0x8a</span>, <span class="number">0x6b</span>,</span><br><span class="line">    <span class="number">0x3a</span>, <span class="number">0x91</span>, <span class="number">0x11</span>, <span class="number">0x41</span>, <span class="number">0x4f</span>, <span class="number">0x67</span>, <span class="number">0xdc</span>, <span class="number">0xea</span>, <span class="number">0x97</span>, <span class="number">0xf2</span>, <span class="number">0xcf</span>, <span class="number">0xce</span>, <span class="number">0xf0</span>, <span class="number">0xb4</span>, <span class="number">0xe6</span>, <span class="number">0x73</span>,</span><br><span class="line">    <span class="number">0x96</span>, <span class="number">0xac</span>, <span class="number">0x74</span>, <span class="number">0x22</span>, <span class="number">0xe7</span>, <span class="number">0xad</span>, <span class="number">0x35</span>, <span class="number">0x85</span>, <span class="number">0xe2</span>, <span class="number">0xf9</span>, <span class="number">0x37</span>, <span class="number">0xe8</span>, <span class="number">0x1c</span>, <span class="number">0x75</span>, <span class="number">0xdf</span>, <span class="number">0x6e</span>,</span><br><span class="line">    <span class="number">0x47</span>, <span class="number">0xf1</span>, <span class="number">0x1a</span>, <span class="number">0x71</span>, <span class="number">0x1d</span>, <span class="number">0x29</span>, <span class="number">0xc5</span>, <span class="number">0x89</span>, <span class="number">0x6f</span>, <span class="number">0xb7</span>, <span class="number">0x62</span>, <span class="number">0x0e</span>, <span class="number">0xaa</span>, <span class="number">0x18</span>, <span class="number">0xbe</span>, <span class="number">0x1b</span>,</span><br><span class="line">    <span class="number">0xfc</span>, <span class="number">0x56</span>, <span class="number">0x3e</span>, <span class="number">0x4b</span>, <span class="number">0xc6</span>, <span class="number">0xd2</span>, <span class="number">0x79</span>, <span class="number">0x20</span>, <span class="number">0x9a</span>, <span class="number">0xdb</span>, <span class="number">0xc0</span>, <span class="number">0xfe</span>, <span class="number">0x78</span>, <span class="number">0xcd</span>, <span class="number">0x5a</span>, <span class="number">0xf4</span>,</span><br><span class="line">    <span class="number">0x1f</span>, <span class="number">0xdd</span>, <span class="number">0xa8</span>, <span class="number">0x33</span>, <span class="number">0x88</span>, <span class="number">0x07</span>, <span class="number">0xc7</span>, <span class="number">0x31</span>, <span class="number">0xb1</span>, <span class="number">0x12</span>, <span class="number">0x10</span>, <span class="number">0x59</span>, <span class="number">0x27</span>, <span class="number">0x80</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x51</span>, <span class="number">0x7f</span>, <span class="number">0xa9</span>, <span class="number">0x19</span>, <span class="number">0xb5</span>, <span class="number">0x4a</span>, <span class="number">0x0d</span>, <span class="number">0x2d</span>, <span class="number">0xe5</span>, <span class="number">0x7a</span>, <span class="number">0x9f</span>, <span class="number">0x93</span>, <span class="number">0xc9</span>, <span class="number">0x9c</span>, <span class="number">0xef</span>,</span><br><span class="line">    <span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0x3b</span>, <span class="number">0x4d</span>, <span class="number">0xae</span>, <span class="number">0x2a</span>, <span class="number">0xf5</span>, <span class="number">0xb0</span>, <span class="number">0xc8</span>, <span class="number">0xeb</span>, <span class="number">0xbb</span>, <span class="number">0x3c</span>, <span class="number">0x83</span>, <span class="number">0x53</span>, <span class="number">0x99</span>, <span class="number">0x61</span>,</span><br><span class="line">    <span class="number">0x17</span>, <span class="number">0x2b</span>, <span class="number">0x04</span>, <span class="number">0x7e</span>, <span class="number">0xba</span>, <span class="number">0x77</span>, <span class="number">0xd6</span>, <span class="number">0x26</span>, <span class="number">0xe1</span>, <span class="number">0x69</span>, <span class="number">0x14</span>, <span class="number">0x63</span>, <span class="number">0x55</span>, <span class="number">0x21</span>, <span class="number">0x0c</span>, <span class="number">0x7d</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//AES_SBOX_H</span></span></span><br></pre></td></tr></table></figure><ul><li>代码实现</li></ul><figure class="highlight c"><figcaption><span>SubBytes.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/SubBytes.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/SBox.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">subBytes</span><span class="params">(<span class="keyword">uint8_t</span> *matrix, <span class="keyword">size_t</span> sizeMatrix, <span class="keyword">bool</span> inverse)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!matrix)</span><br><span class="line">        <span class="keyword">return</span> EFAULT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; sizeMatrix; ++i)</span><br><span class="line">        matrix[i] = inverse ? S_BOX_INV[matrix[i]] : S_BOX[matrix[i]];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="行移位"><a class="markdownIt-Anchor" href="#行移位"></a> 行移位</h4><ul><li>行移位提供了算法的<strong>扩散性</strong>。</li><li>正向行移位<ul><li>状态矩阵第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>行以<strong>字节</strong>为单位，<strong>循环左移</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>单位，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{0, 1, 2, 3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">}</span></span></span></span>。</li></ul></li><li>逆向行移位<ul><li>状态矩阵第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>行以<strong>字节</strong>为单位，<strong>循环右移</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>单位，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{0, 1, 2, 3\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mclose">}</span></span></span></span>。</li></ul></li><li>图示：<br /><img src="/images/Cryptography-Introduction/AES-ShiftRows.svg" alt="来源：Wikipedia" /></li><li>代码实现</li></ul><figure class="highlight c"><figcaption><span>ShiftRows.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/ShiftRows.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">modulo</span><span class="params">(<span class="keyword">int32_t</span> n, <span class="keyword">int32_t</span> m)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n - m * (<span class="keyword">int</span>) <span class="built_in">floor</span>((<span class="keyword">double</span>) n / m);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// External function</span></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">shiftRows</span><span class="params">(<span class="keyword">uint8_t</span> *matrix, <span class="keyword">size_t</span> sizeMatrix, <span class="keyword">bool</span> inverse)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> EFAULT;    <span class="comment">// Bad address</span></span><br><span class="line">    <span class="keyword">if</span> (sizeMatrix &lt; <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;    <span class="comment">// Bad length</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint8_t</span> t[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">int8_t</span> sign = inverse ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int32_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int32_t</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">            t[i * <span class="number">4</span> + j] = matrix[i * <span class="number">4</span> + modulo(j + sign * i, <span class="number">4</span>)];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> memcpy_s(matrix, sizeMatrix, t, sizeMatrix);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="列混淆"><a class="markdownIt-Anchor" href="#列混淆"></a> 列混淆</h4><ul><li>列混淆同样提供了算法的<strong>扩散性</strong>。</li><li>正向列混淆：混淆矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><em>左乘</em>状态矩阵。</li><li>逆向列混淆：逆混淆矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span><em>左乘</em>状态矩阵。</li><li>特殊的矩阵乘法<ul><li>细心的读者（如果有的话）或许已经发现，上述文字的<em>左乘</em>使用了斜体，这是因为这个<em>左乘</em>不是一般意义上的矩阵乘法。</li><li>有限域（Finite Field）<ul><li>域，是加、减、乘和除运算都定义良好且满足特定规则的一个集合。<ul><li>例如：<ul><li>全体整数就是一个域；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="double-struck">Z</mi><mi>p</mi></msub></mrow><annotation encoding="application/x-tex">\mathbb{Z}_p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.974998em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathbb">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>，或更正式地记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">Z</mi><mi mathvariant="normal">/</mi><mi>p</mi><mi mathvariant="double-struck">Z</mi></mrow><annotation encoding="application/x-tex">\mathbb{Z} / p \mathbb{Z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathbb">Z</span><span class="mord">/</span><span class="mord mathnormal">p</span><span class="mord mathbb">Z</span></span></span></span>，称作整数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>模环（ring of integers modulo <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>）。当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>是一个质数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">Z</mi><mi mathvariant="normal">/</mi><mi>p</mi><mi mathvariant="double-struck">Z</mi></mrow><annotation encoding="application/x-tex">\mathbb{Z} / p \mathbb{Z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathbb">Z</span><span class="mord">/</span><span class="mord mathnormal">p</span><span class="mord mathbb">Z</span></span></span></span>也是一个域。因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>是质数，那么域<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">Z</mi><mi mathvariant="normal">/</mi><mi>p</mi><mi mathvariant="double-struck">Z</mi></mrow><annotation encoding="application/x-tex">\mathbb{Z} / p \mathbb{Z}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathbb">Z</span><span class="mord">/</span><span class="mord mathnormal">p</span><span class="mord mathbb">Z</span></span></span></span>中的每个元素都有一个乘法逆元，这样就满足了域必须有除法定义的要求 <s>（啊熟悉的离散，我爱离散数学，但是我学不会（这是masochism吗（大雾</s>。这其实也就是接下来要说明的有限域的一种，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mi>p</mi><mn>1</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(p^1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul></li><li>有限域，或称伽罗瓦域（Galois Field），是一个具有有限元素的域。<ul><li>有限域的元素数称为阶（order）。</li><li>定理：有限域的阶数必定是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">p^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.858832em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>是一个质数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是一个正整数。<ul><li>有限域记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mi>p</mi><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(p^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul></li><li>阶为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>的有限域，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。<ul><li>我们使用多项式的基本表示法构造<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><msub><mi>a</mi><mi>i</mi></msub><msup><mi>x</mi><mi>i</mi></msup></mrow><mo stretchy="false">}</mo><mo separator="true">,</mo><msub><mi>a</mi><mi>i</mi></msub><mo>∈</mo><mtext>GF</mtext><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n) = \{ \sum_{i=0}^{n-1}{a_ix^i} \}, a_i \in \text{GF}(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0787820000000004em;vertical-align:-1.277669em;"></span><span class="mopen">{</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011130000000004em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p></li><li>自然地，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>中的多项式有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>个，并且它们的阶数不超过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</li><li>因为多项式的系数仅在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2)=\{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>中取值，我们隐去多项式的未知数部分，而只使用多项式的二进制系数来表示这些多项式，这样的表示法称为二进制数表示法。因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>在计算机科学中有广泛应用。<ul><li>例如，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><mn>4</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord">4</span><span class="mclose">)</span></span></span></span>中，有多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>x</mi><mn>1</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^3+x^1+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。我们可以简易地使用二进制数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(1011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，或十六进制数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mtext>B</mtext><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">(\text{B})_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">B</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>来表示此多项式。</li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>加法<ul><li>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>中，多项式的加法需要<strong>多项式系数模2</strong>，等效于多项式系数做异或（XOR）运算，也等效于它们的二进制数表示法做<strong>按位异或</strong>（XOR）运算。</li><li>举个栗子，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mn>4</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^4)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>x</mi><mo>+</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">(x^2+x+1)+(x+1)=x^2+2x+2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>，而由于系数是仅在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2)=\{0,1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>中取值，多项式系数需要模2，我们得到最终的结果为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">x^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。<ul><li>而在对应的二进制数表示法下，我们对应有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0111</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>⊕</mo><mo stretchy="false">(</mo><mn>0011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>0100</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0111)_2 \oplus (0011)_2=(0100)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0111</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0100</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>乘法<ul><li>在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>中，多项式的乘法也需要<strong>多项式系数模2</strong>。</li><li>但是乘法有可能得出<strong>度比<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>大</strong>的结果多项式。所以乘法比加法还多出一个步骤，就是需要结果多项式模另外一个不可约多项式，称为最小多项式（Minimum Polynomial），使得结果多项式不可约。</li><li>最小多项式需要被作为一个特定有限域的参数，即描述一个有限域时不仅仅需要描述它的阶数，而且需要描述这个有限域采用的最小多项式。<ul><li>举个栗子，有有限域<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，最小多项式<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m(x)=x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。我们需要计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x^2+x+1) \cdot (x^2+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>在有限域中的值。<ol><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>2</mn><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(x^2+x+1) \cdot (x^2+1)=x^4+x^3+2x^2+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>；</li><li>系数模2后，我们得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^4+x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>；</li><li>我们发现，此结果多项式中出现了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">x^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">x^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>项，不在有限域中。所以我们需要对其模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo>≡</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x^4+x^3+x+1 \equiv x^2+x \pmod{m(x)=x^3+x+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>；<ul><li>请注意，多项式的系数处于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>中。所以在使用长除法计算多项式余数时，需要注意减法相当于异或（XOR）运算。</li></ul></li><li>所以，我们得到了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x^2+x+1) \cdot (x^2+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>在有限域中的值，为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">x^2+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>。</li></ol></li></ul></li><li>同样地，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>乘法也可以在计算机中快速计算：模拟长除法。<ul><li>继续考虑以上的栗子，我们将多项式们的二进制表示写出来：我们需要在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(1011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>下计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>111</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>⋅</mo><mo stretchy="false">(</mo><mn>101</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(111)_2 \cdot (101)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">111</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">101</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li></ul><ol><li>首先计算乘法：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>111</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>⋅</mo><mo stretchy="false">(</mo><mn>101</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>11011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(111)_2 \cdot (101)_2=(11011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">111</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">101</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">11011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；<ul><li>请再次注意，在使用竖式计算乘法时，依然使用异或操作代替加法。</li></ul></li><li>然后我们进行<strong>长除法</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>11011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(11011)_2 / (1011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">11011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><ul><li>注意，此处的长除法也需要使用按位异或代替减法。</li><li>步骤：<ol><li>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(1011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>左移一位（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>10110</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(10110)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">10110</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>），和被除数对齐；</li><li>计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>11011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>⊕</mo><mo stretchy="false">(</mo><mn>10110</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>1101</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(11011)_2 \oplus (10110)_2 = (1101)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">11011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">10110</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1101</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1101</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>⊕</mo><mo stretchy="false">(</mo><mn>1011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mn>110</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(1101)_2 \oplus (1011)_2 = (110)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1101</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">110</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</li></ol></li></ul></li><li>我们得到结果多项式的二进制表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>110</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(110)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">110</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">x^2+x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>。</li></ol></li></ul></li></ul></li><li>二元域（Binary Field），是阶为2的有限域，记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord">2</span><span class="mclose">)</span></span></span></span>。<ul><li>整个域只有两个元素（0和1）。</li><li>域中的加法即为异或（XOR）操作。</li><li>域中的乘法即为与（AND）操作。</li></ul></li></ul></li></ul></li><li>列混淆的矩阵乘法是定义在Rijndeal有限域上的。<ul><li>Rijndael有限域是一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>GF</mtext><mo stretchy="false">(</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{GF}(2^8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">GF</span></span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>域，且最小多项式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8+x^4+x^3+x+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>100011011</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">(100011011)_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">100011011</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）<ul><li>矩阵的每个元素的大小都是一字节，而一个字节有8位，共<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup><mo>=</mo><mn>256</mn></mrow><annotation encoding="application/x-tex">2^8=256</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">256</span></span></span></span>种可能。</li></ul></li><li>矩阵乘法可以被拆解成标量加法和标量乘法。<ul><li>加法使用模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">2^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>加法，可以用按位异或（XOR）运算进行运算。</li><li>乘法使用模<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">2^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>乘法，可以使用乘法和移位异或进行运算。</li></ul></li><li>混淆矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>M</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>3</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>2</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">    M=    \begin{bmatrix}        2 &amp; 3 &amp; 1 &amp; 1 \\        1 &amp; 2 &amp; 3 &amp; 1 \\        1 &amp; 1 &amp; 2 &amp; 3 \\        3 &amp; 1 &amp; 1 &amp; 2    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li>混淆矩阵的逆<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">M^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>M</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>13</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>14</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">    M^{-1}=    \begin{bmatrix}        14 &amp; 11 &amp; 13 &amp; 9 \\        9 &amp; 14 &amp; 11 &amp; 13 \\        13 &amp; 9 &amp; 14 &amp; 11 \\        11 &amp; 13 &amp; 9 &amp; 14    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.864108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">14</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">11</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">11</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">14</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">11</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">14</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">9</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">13</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">11</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">14</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li>混淆矩阵和它的逆的构造请参见FIPS-197, Section 5.1.3。</li></ul></li><li>代码实现（未优化，完全按照上述算法实现）</li></ul><figure class="highlight c"><figcaption><span>MixColumns.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/MixColumns.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">countBinaryDigit</span><span class="params">(<span class="keyword">uint64_t</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        ++r;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">rijndaelAdd</span><span class="params">(<span class="keyword">uint8_t</span> a, <span class="keyword">uint8_t</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a ^ b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> <span class="title">rijndaelMultiply</span><span class="params">(<span class="keyword">uint8_t</span> a, <span class="keyword">uint8_t</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint16_t</span> m           = <span class="number">0x011b</span>;    <span class="comment">// 0b0000 0001 0001 1011</span></span><br><span class="line">    <span class="keyword">uint8_t</span>  mDigitCount = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Calculate the product of a and b (XOR as addition)</span></span><br><span class="line">    <span class="keyword">uint16_t</span> aExpand = a, bExpand = b;</span><br><span class="line">    <span class="keyword">uint16_t</span> product = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (bExpand)</span><br><span class="line">    &#123;</span><br><span class="line">        product ^= (bExpand &amp; <span class="number">0x1</span>) * aExpand;</span><br><span class="line">        bExpand &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        aExpand &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">uint8_t</span> productDigitCount = countBinaryDigit(product);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check if reduction is needed</span></span><br><span class="line">    <span class="keyword">if</span> (productDigitCount &gt;= mDigitCount)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint8_t</span> shiftCount = productDigitCount - mDigitCount;</span><br><span class="line">        m &lt;&lt;= shiftCount;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Simulate long division</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// If the algorithm does not reach to the end AND the MSB of `product` is 1</span></span><br><span class="line">            <span class="keyword">if</span> (productDigitCount - shiftCount &gt;= mDigitCount &amp;&amp; (product &amp; (<span class="number">0x1</span> &lt;&lt; (shiftCount + mDigitCount - <span class="number">1</span>))))</span><br><span class="line">                product ^= m;</span><br><span class="line">            m &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (shiftCount-- &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// We need to loop one more time when the digit count of `product` and `m` are the same.</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">uint8_t</span>) product;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">errno_t</span> <span class="title">matrixMultiply</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">const</span> <span class="keyword">uint8_t</span> *leftMatrix,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">const</span> <span class="keyword">uint8_t</span> *rightMatrix,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">uint8_t</span> *resultMatrix,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">uint8_t</span> (*add)(<span class="keyword">uint8_t</span> a, <span class="keyword">uint8_t</span> b),</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">uint8_t</span> (*multiply)(<span class="keyword">uint8_t</span> a, <span class="keyword">uint8_t</span> b))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (leftMatrix == <span class="literal">NULL</span> || rightMatrix == <span class="literal">NULL</span> || resultMatrix == <span class="literal">NULL</span> || add == <span class="literal">NULL</span> || multiply == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> EFAULT;    <span class="comment">// Bad address</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">size_t</span> t = i * <span class="number">4</span> + j;</span><br><span class="line">                resultMatrix[t] = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// Dot product for two vectors</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">size_t</span> k       = <span class="number">0</span>; k &lt; <span class="number">4</span>; ++k)</span><br><span class="line">                    resultMatrix[t] = add(resultMatrix[t], multiply(leftMatrix[i * <span class="number">4</span> + k], rightMatrix[k * <span class="number">4</span> + j]));</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// External function</span></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">mixColumns</span><span class="params">(<span class="keyword">uint8_t</span> *matrix, <span class="keyword">size_t</span> sizeMatrix, <span class="keyword">bool</span> inverse)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> M[<span class="number">16</span>]     = &#123;</span><br><span class="line">        <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x01</span>,</span><br><span class="line">        <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x01</span>,</span><br><span class="line">        <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>,</span><br><span class="line">        <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x02</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> M_INV[<span class="number">16</span>] = &#123;</span><br><span class="line">        <span class="number">0x0e</span>, <span class="number">0x0b</span>, <span class="number">0x0d</span>, <span class="number">0x09</span>,</span><br><span class="line">        <span class="number">0x09</span>, <span class="number">0x0e</span>, <span class="number">0x0b</span>, <span class="number">0x0d</span>,</span><br><span class="line">        <span class="number">0x0d</span>, <span class="number">0x09</span>, <span class="number">0x0e</span>, <span class="number">0x0b</span>,</span><br><span class="line">        <span class="number">0x0b</span>, <span class="number">0x0d</span>, <span class="number">0x09</span>, <span class="number">0x0e</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="literal">NULL</span> || sizeMatrix != <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EFAULT;    <span class="comment">// Bad address</span></span><br><span class="line">    <span class="keyword">if</span> (sizeMatrix &lt; <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;    <span class="comment">// Bad length</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">errno_t</span> e;</span><br><span class="line">    <span class="keyword">uint8_t</span> resultMatrix[<span class="number">16</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (inverse)</span><br><span class="line">        e = matrixMultiply(M_INV, matrix, resultMatrix, rijndaelAdd, rijndaelMultiply);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        e = matrixMultiply(M, matrix, resultMatrix, rijndaelAdd, rijndaelMultiply);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> memcpy_s(matrix, <span class="number">16</span>, resultMatrix, <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="轮密钥加"><a class="markdownIt-Anchor" href="#轮密钥加"></a> 轮密钥加</h4><ul><li>密钥扩展<ul><li>要了解轮密钥加，就先要了解AES的密钥扩展算法。</li><li>AES使用给定的密钥扩展算法将密钥扩展为<strong>轮密钥</strong>，即各轮加密时使用的密钥。</li><li>步骤：<ol><li>假设密钥<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">l_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> bit，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>l</mi><mi>k</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>128</mn><mo separator="true">,</mo><mn>192</mn><mo separator="true">,</mo><mn>256</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">l_k \in \{128, 192, 256\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">128</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">192</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">256</span><span class="mclose">}</span></span></span></span>。</li><li>将密钥按字节按列装填至<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mo>×</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">4 \times n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>中，下称密钥矩阵，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><msub><mi>l</mi><mi>k</mi></msub><mi mathvariant="normal">/</mi><mn>32</mn></mrow><annotation encoding="application/x-tex">n = l_k / 32</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/32</span></span></span></span>。<ul><li>设密钥的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>个字节为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">k_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mn>4</mn><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{0, 1, ..., 4n - 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，则装填后的密钥矩阵类似<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>0</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mn>4</mn><mi>n</mi><mo>−</mo><mn>4</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>5</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mn>4</mn><mi>n</mi><mo>−</mo><mn>3</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>6</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mn>4</mn><mi>n</mi><mo>−</mo><mn>2</mn></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mn>7</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><mrow><mn>4</mn><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">    K=    \begin{bmatrix}        k_0 &amp; k_4 &amp; ... &amp; k_{4n - 4} \\        k_1 &amp; k_5 &amp; ... &amp; k_{4n - 3} \\        k_2 &amp; k_6 &amp; ... &amp; k_{4n - 2} \\        k_3 &amp; k_7 &amp; ... &amp; k_{4n - 1}    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80006em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65003em;"><span style="top:-1.7110100000000004em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.85801em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span style="height:1.2160200000000003em;width:0.667em;"><svg width='0.667em' height='1.2160200000000003em' style='width:0.667em' viewBox='0 0 667 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style="top:-4.71105em;"><span class="pstrut" style="height:3.2160200000000003em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li>4来自于AES的块大小：4个双字（<code>DWORD</code>，a.k.a. <code>uint32_t</code>），128-bit。</li></ul></li><li>设密钥矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>k</mi><msub><mi>d</mi><mi>i</mi></msub></msub></mrow><annotation encoding="application/x-tex">k_{d_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9445399999999999em;vertical-align:-0.2501em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span>，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>可写作元素为双字的一个向量：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><msub><mi>d</mi><mn>0</mn></msub></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><msub><mi>d</mi><mn>1</mn></msub></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>k</mi><msub><mi>d</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">    K=    \begin{bmatrix}        k_{d_0} &amp; k_{d_1} &amp; ... &amp; k_{d_{n - 1}}    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">...</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173142857142857em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.291765em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p></li><li>设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">n_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为轮密钥的个数（同时也是加密的<strong>总轮数</strong>，包括第0轮），则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>r</mi></msub><mo>=</mo><mi>n</mi><mo>+</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">n_r = n + 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>。</li><li>设轮密钥组<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>为一个长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><msub><mi>n</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">4n_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.79444em;vertical-align:-0.15em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的向量，且<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>的第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mi>i</mi></mrow><annotation encoding="application/x-tex">4i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord mathnormal">i</span></span></span></span>列到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><mi>i</mi><mo>+</mo><mn>3</mn></mrow><annotation encoding="application/x-tex">4i + 3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord">4</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span>列即是第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>轮加密所需要的轮密钥，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{0, 1, ..., n_r - 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>的每个元素都是双字。</li></ul></li><li>我们将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>的每一个元素编号为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mn>4</mn><msub><mi>n</mi><mi>r</mi></msub><mo>−</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">i \in \{0, 1, ..., 4n_r - 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，则<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3600em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>k</mi><msub><mi>d</mi><mi>i</mi></msub></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>&lt;</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo>−</mo><mi>n</mi></mrow></msub><mo>⊕</mo><mtext>SubWord</mtext><mo stretchy="false">(</mo><mtext>RotWord</mtext><mo stretchy="false">(</mo><msub><mi>r</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⊕</mo><mi>r</mi><mi>c</mi><mi>o</mi><msub><mi>n</mi><mrow><mo stretchy="false">⌊</mo><mi>i</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo stretchy="false">⌋</mo></mrow></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>≥</mo><mi>n</mi><mtext> and </mtext><mi>i</mi><mo>≡</mo><mn>0</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo>−</mo><mi>n</mi></mrow></msub><mo>⊕</mo><mtext>SubWord</mtext><mo stretchy="false">(</mo><msub><mi>r</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>≥</mo><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>&gt;</mo><mn>6</mn><mtext> and </mtext><mi>i</mi><mo>≡</mo><mn>4</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>n</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>r</mi><mrow><mi>i</mi><mo>−</mo><mi>n</mi></mrow></msub><mo>⊕</mo><msub><mi>r</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">    r_i =    \begin{cases}        k_{d_i}, &amp; \text{if } i &lt; n \\        r_{i - n} \oplus \text{SubWord}(\text{RotWord}(r_{i - 1})) \oplus rcon_{\lfloor i / n \rfloor}, &amp; \text{if } i \geq n \text{ and } i \equiv 0 \pmod{n} \\        r_{i - n} \oplus \text{SubWord}(r_{i-1}), &amp; \text{if } i \geq n, n &gt; 6 \text{ and } i \equiv 4 \pmod{n} \\        r_{i - n} \oplus r_{i - 1}, &amp; \text{otherwise}    \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95002em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.59199em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.9159999999999999em;width:0.889em;"><svg width='0.889em' height='0.9159999999999999em' style='width:0.889em' viewBox='0 0 889 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.9159999999999999em;width:0.889em;"><svg width='0.889em' height='0.9159999999999999em' style='width:0.889em' viewBox='0 0 889 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style="top:-5.200019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">SubWord</span></span><span class="mopen">(</span><span class="mord text"><span class="mord">RotWord</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">rco</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌊</span><span class="mord mathnormal mtight">i</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">⌋</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord text"><span class="mord">SubWord</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">n</span><span class="mord text"><span class="mord"> and </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">6</span><span class="mord text"><span class="mord"> and </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">4</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>其中：<ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>SubWord</mtext></mrow><annotation encoding="application/x-tex">\text{SubWord}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">SubWord</span></span></span></span></span>函数将每个<strong>字节</strong>进行S盒映射。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>RotWord</mtext></mrow><annotation encoding="application/x-tex">\text{RotWord}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">RotWord</span></span></span></span></span>函数将输入<strong>向左</strong>移动<strong>一个字节</strong>。</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>c</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">rcon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">rco</span><span class="mord mathnormal">n</span></span></span></span>是一个常量数组，其中的每一个元素都是双字。其内容定义为：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><mi>c</mi><mi>o</mi><msub><mi>n</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">(</mo><mtable rowspacing="0.1600em" columnalign="center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>r</mi><msub><mi>c</mi><mi>i</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>00</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>00</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>00</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex"> rcon_i =    \begin{pmatrix}        rc_i &amp; (00)_{16} &amp; (00)_{16} &amp; (00)_{16}    \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathnormal">rco</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">00</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">00</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">00</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mn>02</mn><msup><mo stretchy="false">)</mo><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">rc_i = (02) ^ i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0746639999999998em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">02</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span></span></span></span>，定义在<strong>Rijndael有限域</strong>上。具体的生成算法由下面的递推式定义：<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3600em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>r</mi><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>&gt;</mo><mn>1</mn><mtext> and </mtext><mi>r</mi><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>&lt;</mo><mo stretchy="false">(</mo><mn>80</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>2</mn><mi>r</mi><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>⊕</mo><mo stretchy="false">(</mo><mtext>11B</mtext><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>i</mi><mo>&gt;</mo><mn>1</mn><mtext> and </mtext><mi>r</mi><msub><mi>c</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>≥</mo><mo stretchy="false">(</mo><mn>80</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">    rc_i =    \begin{cases}        0 &amp; \text{if } i = 0 \\        1 &amp; \text{if } i = 1 \\        2rc_{i - 1} &amp; \text{if } i &gt; 1 \text{ and } rc_{i - 1} &lt; (80)_{16} \\        2rc_{i - 1} \oplus (\text{11B})_{16} &amp; \text{if } i &gt; 1 \text{ and } rc_{i - 1} \geq (80)_{16}    \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95002em;"><span style="top:-1.59999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.59199em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.9159999999999999em;width:0.889em;"><svg width='0.889em' height='0.9159999999999999em' style='width:0.889em' viewBox='0 0 889 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292009999999999em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.9159999999999999em;width:0.889em;"><svg width='0.889em' height='0.9159999999999999em' style='width:0.889em' viewBox='0 0 889 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style="top:-5.200019999999999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord text"><span class="mord">11B</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1300000000000003em;"><span style="top:-5.130000000000001em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span></span></span><span style="top:-3.6900000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span></span></span><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mord text"><span class="mord"> and </span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">80</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.8100000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mord text"><span class="mord"> and </span></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord">80</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的范围，我们最多只使用到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>c</mi><mi>o</mi><msub><mi>n</mi><mn>11</mn></msub></mrow><annotation encoding="application/x-tex">rcon_{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathnormal">rco</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，所以我们可以将数组硬编码。由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>c</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">rcon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">rco</span><span class="mord mathnormal">n</span></span></span></span>的每个元素都有大量的填充（padding）0，我们只需要编码<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">rc_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>即可。<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>r</mi><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.1600em" columnalign="center center center center center center center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>00</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>01</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>02</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>04</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>08</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>10</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>20</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>40</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>80</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mtext>1B</mtext><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mn>36</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">    rc_i =    \begin{bmatrix}        (00)_{16} &amp; (01)_{16} &amp; (02)_{16} &amp; (04)_{16} &amp; (08)_{16} &amp; (10)_{16} &amp; (20)_{16} &amp; (40)_{16} &amp; (80)_{16} &amp; (\text{1B})_{16} &amp; (36)_{16}    \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">00</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">01</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">02</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">04</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">08</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">10</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">20</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">40</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">80</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord text"><span class="mord">1B</span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord">36</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></span></p></li></ul></li></ul></li></ol></li></ul></li><li>知道了怎么扩展密钥，轮密钥加就很好理解了。轮密钥加就是将轮密钥和每轮的状态矩阵异或。<ul><li>注意，回顾一下<a href="#%E9%AB%98%E7%BA%A7%E5%8A%A0%E5%AF%86%E6%A0%87%E5%87%86">总体步骤</a>，我们先将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">i = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时的轮密钥和状态矩阵异或一次，再从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>开始进行真正的加密过程。所以在生成轮密钥的时候，生成的轮密钥数要比加密轮数多1。</li><li>轮密钥加是对称的，即轮密钥加的正向过程和反向过程相同。</li></ul></li><li>代码实现<ul><li>这里我将密钥矩阵按行装填，并且按字节存储，没有打包成双字。所以对于每一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">i \in [0, n + 7)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69862em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span>, <code>roundKeys[i * 16]</code>到<code>roundKeys[(i + 1) * 16]</code>（不含）之间就是对应第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span>轮的轮密钥。</li><li>没有按定义那样按列装填密钥到矩阵并打包成双字的原因如下：<ul><li>按行装填的矩阵在下标计算上比按列装填的矩阵更容易，并且两者在此处其实是等效的：仔细想想就会发现，定义上进行打包实际上是将矩阵按列向量进行操作，那我们在此处按行向量进行操作是一样的；</li><li>打包成双字其实并不利于计算，因为状态矩阵是按字节存储的，使用时还需要将轮密钥解包，或者进行繁琐的位运算。</li></ul></li></ul></li></ul><figure class="highlight c"><figcaption><span>AddRoundKey.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/SubBytes.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/AddRoundKey.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DWORD_ROW_INDEX_TO_OFFSET(rowIndex) ((rowIndex) * 4)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">uint8_t</span> rc[] = &#123;</span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x04</span>, <span class="number">0x08</span>, <span class="number">0x10</span>, <span class="number">0x20</span>, <span class="number">0x40</span>, <span class="number">0x80</span>, <span class="number">0x1b</span>, <span class="number">0x36</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> *<span class="title">subWord</span><span class="params">(<span class="keyword">uint8_t</span> *dword)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    subBytes(dword, <span class="number">4</span>, <span class="literal">false</span>);</span><br><span class="line">    <span class="keyword">return</span> dword;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">uint8_t</span> *<span class="title">rotWord</span><span class="params">(<span class="keyword">uint8_t</span> *dword)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint8_t</span> t = dword[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    dword[<span class="number">0</span>] = dword[<span class="number">1</span>];</span><br><span class="line">    dword[<span class="number">1</span>] = dword[<span class="number">2</span>];</span><br><span class="line">    dword[<span class="number">2</span>] = dword[<span class="number">3</span>];</span><br><span class="line">    dword[<span class="number">3</span>] = t;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dword;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// External functions</span></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">expandRoundKey</span><span class="params">(AESKeyLength keyLength, <span class="keyword">uint8_t</span> *roundKeys, <span class="keyword">size_t</span> sizeRoundKeys)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (roundKeys == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> EFAULT;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// n is the length of key in DWORD (a.k.a. uint32_t)</span></span><br><span class="line">        <span class="keyword">size_t</span> n = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (keyLength)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> AES_KL_128:</span><br><span class="line">                n = <span class="number">128</span> / <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> AES_KL_192:</span><br><span class="line">                n = <span class="number">192</span> / <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> AES_KL_256:</span><br><span class="line">                n = <span class="number">256</span> / <span class="number">32</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * There are (n + 7) rounds. Each round consume a round key of 16 * 16 bytes.</span></span><br><span class="line"><span class="comment">         * Therefore, the total size of round key is (n + 7) * 4 * 4 bytes.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (sizeRoundKeys &lt; (n + <span class="number">7</span>) * <span class="number">16</span>)</span><br><span class="line">            <span class="keyword">return</span> EINVAL;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * We assume that the key is loaded by row, rather than column,</span></span><br><span class="line"><span class="comment">         * since indices of rows are easier to calculate.</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * We assume that a seed key is loaded in `roundKeys`,</span></span><br><span class="line"><span class="comment">         * so we are skipping the situation where rowIndex = 0 to n - 1.</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * We are doing expansion in byte, rather than in DWORD,</span></span><br><span class="line"><span class="comment">         * so the algorithm has to be modified slightly.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> rowIndex = n; rowIndex &lt; (n + <span class="number">7</span>) * <span class="number">4</span>; ++rowIndex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!(rowIndex % n))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">uint8_t</span> previousRow[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">errno_t</span> e = memcpy_s(previousRow, <span class="number">4</span>,</span><br><span class="line">                                     roundKeys + DWORD_ROW_INDEX_TO_OFFSET(rowIndex - <span class="number">1</span>), <span class="number">4</span>);</span><br><span class="line">                <span class="keyword">if</span> (e)</span><br><span class="line">                    <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">                subWord(rotWord(previousRow));</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">                &#123;</span><br><span class="line">                    roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex) + i] =</span><br><span class="line">                        roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex - n) + i] ^</span><br><span class="line">                        previousRow[i] ^</span><br><span class="line">                        (i ? <span class="number">0x00</span> : rc[rowIndex / n]);</span><br><span class="line">                    <span class="comment">// If i == 0, XOR wit7h rc[i / n]; otherwise XOR with 0x00 (unchanged)</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (n &gt; <span class="number">6</span> &amp;&amp; rowIndex % n == <span class="number">4</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">uint8_t</span> previousRow[<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">errno_t</span> e = memcpy_s(previousRow, <span class="number">4</span>,</span><br><span class="line">                                     roundKeys + DWORD_ROW_INDEX_TO_OFFSET(rowIndex - <span class="number">1</span>), <span class="number">4</span>);</span><br><span class="line">                <span class="keyword">if</span> (e)</span><br><span class="line">                    <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">                subWord(previousRow);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">                &#123;</span><br><span class="line">                    roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex) + i] =</span><br><span class="line">                        roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex - n) + i] ^ previousRow[i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">                &#123;</span><br><span class="line">                    roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex) + i] =</span><br><span class="line">                        roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex - n) + i] ^</span><br><span class="line">                        roundKeys[DWORD_ROW_INDEX_TO_OFFSET(rowIndex - <span class="number">1</span>) + i];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Main procedure</span></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">addRoundKey</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">uint8_t</span> *matrix, <span class="keyword">size_t</span> sizeMatrix,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">const</span> <span class="keyword">uint8_t</span> *roundKeys, <span class="keyword">size_t</span> sizeRoundKeys,</span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">size_t</span> round)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="literal">NULL</span> || roundKeys == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> EFAULT;</span><br><span class="line">    <span class="keyword">if</span> (sizeMatrix &lt; <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;</span><br><span class="line">    <span class="keyword">if</span> (sizeRoundKeys == <span class="number">0</span> || sizeRoundKeys &lt; (round + <span class="number">1</span>) * <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j)</span><br><span class="line">            matrix[i * <span class="number">4</span> + j] ^= roundKeys[round * <span class="number">16</span> + j * <span class="number">4</span> + i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="主程序"><a class="markdownIt-Anchor" href="#主程序"></a> 主程序</h4><ul><li>注：我实现的版本的密钥、轮密钥、明文和密文矩阵都是按行排列的，并没有AES的定义要求做，因为我觉得这样更符合人的使用习惯。<code>encrypt</code>和<code>decrypt</code>函数会在内部对矩阵转置，再进行操作。</li></ul><figure class="highlight c"><figcaption><span>AES.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/AES.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/SubBytes.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/ShiftRows.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/MixColumns.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">encrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">uint8_t</span> *plain,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">size_t</span> sizePlain,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">uint8_t</span> *cipher,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">size_t</span> sizeCipher,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">const</span> <span class="keyword">uint8_t</span> *roundKeys,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">size_t</span> sizeRoundKeys,</span></span></span><br><span class="line"><span class="params"><span class="function">                AESKeyLength keyLength)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(plain &amp;&amp; cipher &amp;&amp; roundKeys))</span><br><span class="line">        <span class="keyword">return</span> EFAULT;</span><br><span class="line">    <span class="keyword">if</span> (sizePlain &lt; <span class="number">16</span> || sizeCipher &lt; <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">switch</span> (keyLength)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> AES_KL_128:</span><br><span class="line">            n = <span class="number">128</span> / <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> AES_KL_192:</span><br><span class="line">            n = <span class="number">192</span> / <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> AES_KL_256:</span><br><span class="line">            n = <span class="number">256</span> / <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sizeRoundKeys &lt; (n + <span class="number">7</span>) * <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> round = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">errno_t</span> e = memcpy_s(cipher, sizeCipher, plain, sizePlain);</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Transpose the state matrix: we assumed that the plain text is loaded by row.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">            cipher[i * <span class="number">4</span> + j] ^= cipher[j * <span class="number">4</span> + i] ^= cipher[i * <span class="number">4</span> + j] ^= cipher[j * <span class="number">4</span> + i];</span><br><span class="line"></span><br><span class="line">    e = addRoundKey(cipher, sizeCipher, roundKeys, sizeRoundKeys, round++);</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (round &lt; n + <span class="number">7</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        e = subBytes(cipher, sizeCipher, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">        e = shiftRows(cipher, sizeCipher, <span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">if</span> (e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (round != n + <span class="number">7</span> - <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            e = mixColumns(cipher, sizeCipher, <span class="literal">false</span>);</span><br><span class="line">            <span class="keyword">if</span> (e)</span><br><span class="line">                <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        e = addRoundKey(cipher, sizeCipher, roundKeys, sizeRoundKeys, round++);</span><br><span class="line">        <span class="keyword">if</span> (e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Transpose back the state matrix: the cipher is also need to be consistent with the plain text in terms of format.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">            cipher[i * <span class="number">4</span> + j] ^= cipher[j * <span class="number">4</span> + i] ^= cipher[i * <span class="number">4</span> + j] ^= cipher[j * <span class="number">4</span> + i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">errno_t</span> <span class="title">decrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">uint8_t</span> *cipher,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">size_t</span> sizeCipher,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">uint8_t</span> *plain,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">size_t</span> sizePlain,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">const</span> <span class="keyword">uint8_t</span> *roundKeys,</span></span></span><br><span class="line"><span class="params"><span class="function">                <span class="keyword">size_t</span> sizeRoundKeys,</span></span></span><br><span class="line"><span class="params"><span class="function">                AESKeyLength keyLength)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(plain &amp;&amp; cipher &amp;&amp; roundKeys))</span><br><span class="line">        <span class="keyword">return</span> EFAULT;</span><br><span class="line">    <span class="keyword">if</span> (sizePlain &lt; <span class="number">16</span> || sizeCipher &lt; <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">switch</span> (keyLength)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> AES_KL_128:</span><br><span class="line">            n = <span class="number">128</span> / <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> AES_KL_192:</span><br><span class="line">            n = <span class="number">192</span> / <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> AES_KL_256:</span><br><span class="line">            n = <span class="number">256</span> / <span class="number">32</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sizeRoundKeys &lt; (n + <span class="number">7</span>) * <span class="number">16</span>)</span><br><span class="line">        <span class="keyword">return</span> EINVAL;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> round = n + <span class="number">7</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">errno_t</span> e = memcpy_s(plain, sizePlain, cipher, sizeCipher);</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Transpose the state matrix: we assumed that the cipher text is loaded by row.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">            plain[i * <span class="number">4</span> + j] ^= plain[j * <span class="number">4</span> + i] ^= plain[i * <span class="number">4</span> + j] ^= plain[j * <span class="number">4</span> + i];</span><br><span class="line"></span><br><span class="line">    e = addRoundKey(plain, sizePlain, roundKeys, sizeRoundKeys, round);</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (round &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        e = shiftRows(plain, sizePlain, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">        e = subBytes(plain, sizePlain, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">if</span> (e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">        e = addRoundKey(plain, sizePlain, roundKeys, sizeRoundKeys, --round);</span><br><span class="line">        <span class="keyword">if</span> (e)</span><br><span class="line">            <span class="keyword">return</span> e;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (round)</span><br><span class="line">        &#123;</span><br><span class="line">            e = mixColumns(plain, sizePlain, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (e)</span><br><span class="line">                <span class="keyword">return</span> e;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Transpose back the state matrix: the plain text is also need to be consistent with the cipher in terms of format.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">size_t</span> j = <span class="number">0</span>; j &lt; i; ++j)</span><br><span class="line">            plain[i * <span class="number">4</span> + j] ^= plain[j * <span class="number">4</span> + i] ^= plain[i * <span class="number">4</span> + j] ^= plain[j * <span class="number">4</span> + i];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试用驱动程序"><a class="markdownIt-Anchor" href="#测试用驱动程序"></a> 测试用驱动程序</h4><ul><li>此程序按照FIPS-197, 附录C的内容对算法进行测试</li></ul><figure class="highlight c"><figcaption><span>main.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Carrying out FIPS-197 specified tests.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;include/AES.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST_KEY_LENGTH 32    <span class="comment">// Option: 16, 24, or 32 bytes</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST_KEY_LENGTH_ENUM AES_KL_256</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">(<span class="keyword">uint8_t</span> *matrix, <span class="keyword">size_t</span> sizeMatrix)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> key[TEST_KEY_LENGTH];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> plain[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> cipher[<span class="number">16</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">uint8_t</span> roundKeys[(TEST_KEY_LENGTH / <span class="number">4</span> + <span class="number">7</span>) * <span class="number">16</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(key); ++i)</span><br><span class="line">        key[i] = (<span class="keyword">uint8_t</span>) i;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Key matrix:&quot;</span>);</span><br><span class="line">    printMatrix(key, <span class="keyword">sizeof</span>(key));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(plain); ++i)</span><br><span class="line">        plain[i] = (<span class="keyword">uint8_t</span>) ((i &lt;&lt; <span class="number">4</span>) + i);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Plain text matrix:&quot;</span>);</span><br><span class="line">    printMatrix(plain, <span class="keyword">sizeof</span>(plain));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">errno_t</span> e;</span><br><span class="line"></span><br><span class="line">    memcpy_s(roundKeys, <span class="keyword">sizeof</span>(roundKeys), key, <span class="keyword">sizeof</span>(key));</span><br><span class="line">    e = expandRoundKey(TEST_KEY_LENGTH_ENUM, roundKeys, <span class="keyword">sizeof</span>(roundKeys));</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error code: %d&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Expanded round key matrix:&quot;</span>);</span><br><span class="line">    printMatrix(roundKeys, <span class="keyword">sizeof</span>(roundKeys));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;AES-%d encryption test:\n&quot;</span>, TEST_KEY_LENGTH * <span class="number">8</span>);</span><br><span class="line">    e = encrypt(plain, <span class="keyword">sizeof</span>(plain), cipher, <span class="keyword">sizeof</span>(cipher), roundKeys, <span class="keyword">sizeof</span>(roundKeys), TEST_KEY_LENGTH_ENUM);</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error code: %d&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Cipher text matrix:&quot;</span>);</span><br><span class="line">    printMatrix(cipher, <span class="keyword">sizeof</span>(cipher));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;AES-%d decryption test:\n&quot;</span>, TEST_KEY_LENGTH * <span class="number">8</span>);</span><br><span class="line">    e = decrypt(cipher, <span class="keyword">sizeof</span>(cipher), plain, <span class="keyword">sizeof</span>(plain), roundKeys, <span class="keyword">sizeof</span>(roundKeys), TEST_KEY_LENGTH_ENUM);</span><br><span class="line">    <span class="keyword">if</span> (e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error code: %d&quot;</span>, e);</span><br><span class="line">        <span class="keyword">return</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Plain text matrix:&quot;</span>);</span><br><span class="line">    printMatrix(plain, <span class="keyword">sizeof</span>(plain));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printMatrix</span><span class="params">(<span class="keyword">uint8_t</span> *matrix, <span class="keyword">size_t</span> sizeMatrix)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!(matrix &amp;&amp; sizeMatrix))</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; sizeMatrix; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%02hhx &quot;</span>, matrix[i]);</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">4</span> == <span class="number">3</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="完整clion工程"><a class="markdownIt-Anchor" href="#完整clion工程"></a> 完整CLion工程</h4><ul><li>详见<a href="https://github.com/wxx9248/AES.c">我的Github</a></li></ul><h2 id="非对称加密算法"><a class="markdownIt-Anchor" href="#非对称加密算法"></a> 非对称加密算法</h2><h3 id="rsa"><a class="markdownIt-Anchor" href="#rsa"></a> RSA</h3><h1 id="0x03-常用摘要算法介绍"><a class="markdownIt-Anchor" href="#0x03-常用摘要算法介绍"></a> 0x03 常用摘要算法介绍</h1><h2 id="常见哈希算法"><a class="markdownIt-Anchor" href="#常见哈希算法"></a> 常见哈希算法</h2><h2 id="常见消息认证码"><a class="markdownIt-Anchor" href="#常见消息认证码"></a> 常见消息认证码</h2><h1 id="0x04-常用签名算法介绍"><a class="markdownIt-Anchor" href="#0x04-常用签名算法介绍"></a> 0x04 常用签名算法介绍</h1><h1 id="0x04-常用密钥协商算法介绍"><a class="markdownIt-Anchor" href="#0x04-常用密钥协商算法介绍"></a> 0x04 常用密钥协商算法介绍</h1><h1 id="0x05-其他"><a class="markdownIt-Anchor" href="#0x05-其他"></a> 0x05 其他</h1><h2 id="工作模式"><a class="markdownIt-Anchor" href="#工作模式"></a> 工作模式</h2><h2 id="填充模式"><a class="markdownIt-Anchor" href="#填充模式"></a> 填充模式</h2><h2 id="电子证书"><a class="markdownIt-Anchor" href="#电子证书"></a> 电子证书</h2><h2 id="一些名词的定义"><a class="markdownIt-Anchor" href="#一些名词的定义"></a> 一些名词的定义</h2><h3 id="完整性"><a class="markdownIt-Anchor" href="#完整性"></a> 完整性</h3><ul><li>消息的完整性（integrity）指消息未被（有意或无意地）篡改。</li></ul><h3 id="真实性"><a class="markdownIt-Anchor" href="#真实性"></a> 真实性</h3><ul><li>消息的真实性（authenticity）指能确定消息是由发送方发出，而不是由第三方发出。</li></ul><h3 id="不可抵赖性"><a class="markdownIt-Anchor" href="#不可抵赖性"></a> 不可抵赖性</h3><ul><li>消息的不可抵赖性（non-repudiability）在<strong>确定真实性</strong>的同时，还能确定发送方做出了发送消息给接收方的动作，且此动作可以被任何第三方验证有效。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;一直想梳理一下密码学的基本概念，但是一直拖着没有搞。最近放假了，在回国前终于有点时间梳理一下零散的密码学知识，毕竟这些东西很基础，以后不论在哪里都会用到，即使我不从事密码学相关行业。&lt;br /&gt;
本篇主要介绍主要的密码学概念，以及具体的一些加、解密算法和它们的应用。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="信息安全" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="密码学" scheme="https://blog.wxx9248.tk/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>搭建私有CA认证体系</title>
    <link href="https://blog.wxx9248.tk/2021/04/29/Private-CA-Server-Setup/"/>
    <id>https://blog.wxx9248.tk/2021/04/29/Private-CA-Server-Setup/</id>
    <published>2021-04-29T05:57:00.000Z</published>
    <updated>2021-04-29T17:17:10.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
</summary>
      
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="网站建设" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="SSL/TLS" scheme="https://blog.wxx9248.tk/tags/SSL-TLS/"/>
    
    <category term="CA" scheme="https://blog.wxx9248.tk/tags/CA/"/>
    
    <category term="电子证书" scheme="https://blog.wxx9248.tk/tags/%E7%94%B5%E5%AD%90%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>《Be Prepared》 歌词翻译</title>
    <link href="https://blog.wxx9248.tk/2021/04/29/Be-Prepared-Lyrics-Translation/"/>
    <id>https://blog.wxx9248.tk/2021/04/29/Be-Prepared-Lyrics-Translation/</id>
    <published>2021-04-29T04:41:00.000Z</published>
    <updated>2021-04-29T22:05:57.382Z</updated>
    
    <content type="html"><![CDATA[<center>    <audio src="/audios/Be-Prepared-Lyrics-Translation/Jeremy Irons,Whoopi Goldberg,Jim Cummings - Be Prepared.mp3" controls="controls" preload="preload">        你的浏览器不支持HTML 5 :(    </audio></center><p>I never thought hyenas essential<br />我从没觉得鬣狗有多重要<br />They’re crude and unspeakably plain<br />粗野且又难以形容的无知<br />But maybe they’ve a glimmer of potential<br />但也许它们还有一点潜力<br />If allied to my vision and brain<br />如果配上我的视野和才智</p><span id="more"></span><p>I know that your powers of retention<br />我很清楚你们的能力<br />Are as wet as a warthog’s backside<br />和疣猪屁股一样没用<br />But thick as you are, pay attention<br />但是饭桶们都听仔细<br />My words are a matter of pride<br />我的话才能带来光荣</p><p>It’s clear from your vacant expressions<br />我能看出来你们呆滞的神情<br />The lights are not all on upstairs<br />和你们从来不在线的智力<br />But we’re talking kings and successions<br />但是我们在谈论王位和继承<br />Even you can’t be caught unawares<br />即使你们也不会措手不及</p><p>So prepare for a chance of a lifetime<br />准备好　为这千载难得的机会<br />Be prepared for sensational news<br />准备好　为这惊天动地的新闻</p><p>A shining new era<br />一个崭新的时代<br />Is tiptoeing nearer<br />正在悄悄地到来<br />And where do we feature?<br />那我们怎么搞<br />Just listen to teacher<br />就听从我指导</p><p>I know it sounds sordid<br />我知道这很肮脏<br />But you’ll be rewarded<br />但你们会有奖赏<br />When at last I am given my dues<br />在得到我应得的之后<br />And injustice deliciously squared<br />不公的待遇会被成倍回报<br />Be prepared!<br />准备好！</p><p>It’s great that we’ll soon be connected<br />很高兴我们很快就能联手<br />With a king who’ll be all-time adored<br />和将永受崇拜的君主<br />Of course, quid pro quo, you’re expected<br />那　交换条件　作为盟友<br />To take certain duties on board<br />你们要担任一些职务</p><p>The future is littered with prizes<br />未来到处充满着奖赏<br />And though I’m the main addressee<br />虽然这些都是我的财宝<br />The point that I must emphasize is<br />但是我还得强调一项<br />You won’t get a sniff without me!<br />没我你们影子都见不到</p><p>So prepare for the coup of the century<br />准备好　为这百年一遇的变革<br />Be prepared for the murkiest scam<br />准备好　为这黑暗至极的骗局<br />(Oooh… La! La! La!)<br />噢　啦～啦～啦～<br />Meticulous planning<br />天衣无缝的计算<br />Tenacity spanning<br />年复一年的忍耐<br />Decades of denial<br />数不胜数的否定<br />Is simply why I’ll<br />是我称王的原因<br />Be king undisputed<br />无可争议<br />Respected, saluted<br />万兽敬仰<br />And seen for the wonder I am<br />看看我的飒爽的雄姿<br />Yes, my teeth and ambitions are bared<br />我露出我的野心和利爪<br />Be prepared!<br />准备好！<br />Yes, our teeth and ambitions are bared -<br />我们已露出野心和利爪<br />Be prepared!<br />准备好！</p>]]></content>
    
    
    <summary type="html">&lt;center&gt;
    &lt;audio src=&quot;/audios/Be-Prepared-Lyrics-Translation/Jeremy Irons,Whoopi Goldberg,Jim Cummings - Be Prepared.mp3&quot; controls=&quot;controls&quot; preload=&quot;preload&quot;&gt;
        你的浏览器不支持HTML 5 :(
    &lt;/audio&gt;
&lt;/center&gt;
&lt;p&gt;I never thought hyenas essential&lt;br /&gt;
我从没觉得鬣狗有多重要&lt;br /&gt;
They’re crude and unspeakably plain&lt;br /&gt;
粗野且又难以形容的无知&lt;br /&gt;
But maybe they’ve a glimmer of potential&lt;br /&gt;
但也许它们还有一点潜力&lt;br /&gt;
If allied to my vision and brain&lt;br /&gt;
如果配上我的视野和才智&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="人文" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/"/>
    
    <category term="自然语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/"/>
    
    <category term="翻译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="英语" scheme="https://blog.wxx9248.tk/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="歌词" scheme="https://blog.wxx9248.tk/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>两种取模运算</title>
    <link href="https://blog.wxx9248.tk/2021/02/15/Two-Types-of-Modulus/"/>
    <id>https://blog.wxx9248.tk/2021/02/15/Two-Types-of-Modulus/</id>
    <published>2021-02-15T13:54:00.000Z</published>
    <updated>2021-02-18T04:38:05.752Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>最近在学离散数学，开始接触一点基础的数论知识。</p><p>在讲<a href="https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm">扩展欧几里得算法 (Extended Euclidean Algorithm)</a>的时候，发现数学上用的取模运算和计算机语言普遍实现的算法不一样。</p><p>其实在很久以前，学Python的时候就有此疑问（Python实现的是数学上用的取模），但是<del>由于我懒</del>，我并没有深入理解这两种取模的具体细节，于是就有了这篇文章。</p><span id="more"></span><h1 id="0x01-问题引入"><a class="markdownIt-Anchor" href="#0x01-问题引入"></a> 0x01 问题引入</h1><p>如果你有幸学过C和Python，就应该清楚两种语言中的取模(%)的实现是不一样的，这种实现上的差异可以在操作数是<strong>负数</strong>的时候表现出来。</p><p>请看下面的两个例子：</p><figure class="highlight c"><figcaption><span>mod.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="number">-8</span> % <span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><figcaption><span>mod.py</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(-<span class="number">8</span> % <span class="number">7</span>)</span><br></pre></td></tr></table></figure><p>你会发现，这两个程序同样是在求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>8</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>7</mn></mrow><annotation encoding="application/x-tex">-8 \bmod 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>, 但是运行结果却不一样：</p><ul><li>C语言的执行结果是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span></li><li>Python的执行结果是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn></mrow><annotation encoding="application/x-tex">6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></li></ul><p>这是为什么呢？<del>（自问自答的屑</del></p><h1 id="0x02-原因解析"><a class="markdownIt-Anchor" href="#0x02-原因解析"></a> 0x02 原因解析</h1><p>原因是C语言和Python采用了不同的对于取模的定义：</p><ul><li>C语言采用截断式取模（truncated modulus）</li><li>Python采用向下取整式取模（floor modulus）</li></ul><p>我们知道，我们对于取模运算的定义是：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi><mo>=</mo><mi>a</mi><mo>−</mo><mi>b</mi><mo>⋅</mo><mo stretchy="false">(</mo><mi>a</mi><mi mathvariant="normal">\</mi><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a \bmod b = a - b \cdot (a \backslash b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord">\</span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p><p>两种定义对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi mathvariant="normal">\</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">a \backslash b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">a</span><span class="mord">\</span><span class="mord mathnormal">b</span></span></span></span>的解释不同：</p><ul><li>截断式取模采用截断式整数除法，即直接截断小数位，只保留整数位</li><li>向下取整式取模采用向下取整式整数除法，即先进行浮点除法，再对结果进行向下取整</li></ul><p>这也是两种取模方式名称的由来。</p><h1 id="0x03-结果验证"><a class="markdownIt-Anchor" href="#0x03-结果验证"></a> 0x03 结果验证</h1><p>按照上述原理，我们可以验证上面的C代码和Python代码。</p><p>计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>8</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>7</mn></mrow><annotation encoding="application/x-tex">-8 \bmod 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span></span></span></span>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mfrac><mn>8</mn><mn>7</mn></mfrac><mo>≈</mo><mo>−</mo><mn>1.142857</mn></mrow><annotation encoding="application/x-tex">-\frac{8}{7} \approx -1.142857</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">7</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1.142857</span></span></span></span></span></p><p>截断式取模：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mn>8</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>7</mn><mo>=</mo><mo>−</mo><mn>8</mn><mo>−</mo><mn>7</mn><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mn>8</mn><mi mathvariant="normal">\</mi><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>8</mn><mo>−</mo><mn>7</mn><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">-8 \bmod 7 = -8 - 7 \times (-8 \backslash 7) = -8 - 7 \times (-1) = -1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">8\7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span></span></p><p>向下取整式取模：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">⌊</mo><mo>−</mo><mn>1.142857</mn><mo stretchy="false">⌋</mo><mo>=</mo><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">\lfloor-1.142857\rfloor = -2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord">−</span><span class="mord">1.142857</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><mn>8</mn><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mn>7</mn><mo>=</mo><mo>−</mo><mn>8</mn><mo>−</mo><mn>7</mn><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mn>8</mn><mi mathvariant="normal">\</mi><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mn>8</mn><mo>−</mo><mn>7</mn><mo>×</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">-8 \bmod 7 = -8 - 7 \times (-8 \backslash 7) = -8 - 7 \times (-2) = 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">mod</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">8\7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></span></p><h1 id="0x04-尾注"><a class="markdownIt-Anchor" href="#0x04-尾注"></a> 0x04 尾注</h1><ol><li>对于整除运算，C和Python中也采用相应的实现，即<ul><li>C语言中，<code>-8 / 7 == -1</code></li><li>Python中，<code>-8 // 7 == -2</code></li></ul></li><li>在一些资料中，截断式取模运算不叫作取模（modulus）运算，而叫做求余（remainder）运算，以与向下取整式取模运算区分。（有一些人还称后者为真·取模（true modulus）运算）</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;最近在学离散数学，开始接触一点基础的数论知识。&lt;/p&gt;
&lt;p&gt;在讲&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Euclidean_algorithm&quot;&gt;扩展欧几里得算法 (Extended Euclidean Algorithm)&lt;/a&gt;的时候，发现数学上用的取模运算和计算机语言普遍实现的算法不一样。&lt;/p&gt;
&lt;p&gt;其实在很久以前，学Python的时候就有此疑问（Python实现的是数学上用的取模），但是&lt;del&gt;由于我懒&lt;/del&gt;，我并没有深入理解这两种取模的具体细节，于是就有了这篇文章。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="算法" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="C" scheme="https://blog.wxx9248.tk/tags/C/"/>
    
    <category term="Python" scheme="https://blog.wxx9248.tk/tags/Python/"/>
    
    <category term="取模" scheme="https://blog.wxx9248.tk/tags/%E5%8F%96%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>编程语言学习笔记集合</title>
    <link href="https://blog.wxx9248.tk/2021/01/11/Programming-Language-Notes/"/>
    <id>https://blog.wxx9248.tk/2021/01/11/Programming-Language-Notes/</id>
    <published>2021-01-10T18:34:00.000Z</published>
    <updated>2021-04-29T16:56:48.674Z</updated>
    
    <content type="html"><![CDATA[<p>笔记全部记录在OneNote上，国内用户可能需要科学上网。</p><span id="more"></span><h1 id="python-笔记"><a class="markdownIt-Anchor" href="#python-笔记"></a> Python 笔记</h1><div id="ifbox" style="margin: 0 auto; text-align: center;"><iframe src="https://onedrive.live.com/embed?cid=276FCBB6F4CE3E32&resid=276FCBB6F4CE3E32%2119547&authkey=AAWjBv3bHydscKQ" width="98" height="120" frameborder="0" scrolling="no"></iframe></div><h1 id="c-笔记"><a class="markdownIt-Anchor" href="#c-笔记"></a> C++ 笔记</h1><div id="ifbox" style="margin: 0 auto; text-align: center;"><iframe src="https://onedrive.live.com/embed?cid=276FCBB6F4CE3E32&resid=276FCBB6F4CE3E32%2119810&authkey=APcJ0a7OKCRSw1M" width="98" height="120" frameborder="0" scrolling="no"></iframe></div><h1 id="java-笔记"><a class="markdownIt-Anchor" href="#java-笔记"></a> Java 笔记</h1><div id="ifbox" style="margin: 0 auto; text-align: center;"><iframe src="https://onedrive.live.com/embed?cid=276FCBB6F4CE3E32&resid=276FCBB6F4CE3E32%2120479&authkey=AJgIPIm2pcz0gu0" width="98" height="120" frameborder="0" scrolling="no"></iframe></div>]]></content>
    
    
    <summary type="html">&lt;p&gt;笔记全部记录在OneNote上，国内用户可能需要科学上网。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="计算机语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C++" scheme="https://blog.wxx9248.tk/tags/C/"/>
    
    <category term="Python" scheme="https://blog.wxx9248.tk/tags/Python/"/>
    
    <category term="Java" scheme="https://blog.wxx9248.tk/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Bilibili AV号/BV号互转工具</title>
    <link href="https://blog.wxx9248.tk/2020/03/25/Bilibili-avid-bvid-Converter/"/>
    <id>https://blog.wxx9248.tk/2020/03/25/Bilibili-avid-bvid-Converter/</id>
    <published>2020-03-24T18:00:00.000Z</published>
    <updated>2021-02-16T10:12:02.537Z</updated>
    
    <content type="html"><![CDATA[<style type="text/css">label.demo-tag{    float: left;    width: 8em;}.demo-textbox, .demo-textarea{    width: 250px;    font-family: consolas, Menlo, "PingFang SC", "Microsoft YaHei", monospace, Helvetica Neue For Number;    font-size: 15px;}textarea#demo-json{    height: 400px;    resize: none;    overflow: scroll;}button.demo-button{    width: 60px;    padding: 5px;    background-color: #6bcfff;    color: #fff;    border: 1px solid transparent;    cursor: pointer;}</style><h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>最近B站把AV号换成了BV号，但是原来的av号还能继续使用。<br />突然心血来潮想写一个AV号转BV号互转的工具，最好是B/S的（毕竟没啥人愿意为查个AV号下一个Python什么的）。<br />前端没什么经验，还在门外面晃悠，在经历过一系列坎坷之后，终于让我给写出来了。</p><p>20210110 更新：知乎大佬@mcfx破解了<a href="https://www.zhihu.com/question/381784377">BV号的算法</a>，于是决定重写，将计算全部限制在浏览器端。</p><h1 id="0x01-项目仓库"><a class="markdownIt-Anchor" href="#0x01-项目仓库"></a> 0x01 项目仓库</h1><p>本程序使用JavaScript编写，托管在<a href="https://gitee.com/">Gitee 码云</a>上。详情请参见仓库<code>README.md</code>。<br />仓库地址：<a href="https://gitee.com/wxx9248/Bilibili-avid-bvid-Converter">传送门</a></p><span id="more"></span><h1 id="0x02-演示"><a class="markdownIt-Anchor" href="#0x02-演示"></a> 0x02 演示</h1><div id="demo-container">    <script        src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"        integrity="sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg=="        crossorigin="anonymous">    </script>    <script        charset="utf-8"        src="/assets/Bilibili-avid-bvid-Converter/BIDConverter.js">    </script>    <script>        $(document).ready(            function()            {                "use strict";                $("button#demo-exec").click(                    function()                    {                        "use strict";                        $("input#demo-output").val(convertBID($("input#demo-input").val()));                    }                )            }        );    </script>    <div class="demo-wrapper" id="demo-input-wrapper">        <label class="demo-tag" id="demo-input-tag">输入AV/BV号：</label>        <input class="demo-textbox" id="demo-input">        <button class="demo-button" id="demo-exec">查询</button>    </div>    <div class="demo-wrapper" id="demo-output-wrapper">        <label class="demo-tag" id="demo-output-tag">查询结果：</label>        <input class="demo-textbox" id="demo-output" readonly="readonly">    </div></div>]]></content>
    
    
    <summary type="html">&lt;style type=&quot;text/css&quot;&gt;
label.demo-tag
{
    float: left;
    width: 8em;
}
.demo-textbox, .demo-textarea
{
    width: 250px;
    font-family: consolas, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, monospace, Helvetica Neue For Number;
    font-size: 15px;
}
textarea#demo-json
{
    height: 400px;
    resize: none;
    overflow: scroll;
}
button.demo-button
{
    width: 60px;
    padding: 5px;
    background-color: #6bcfff;
    color: #fff;
    border: 1px solid transparent;
    cursor: pointer;
}
&lt;/style&gt;
&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;最近B站把AV号换成了BV号，但是原来的av号还能继续使用。&lt;br /&gt;
突然心血来潮想写一个AV号转BV号互转的工具，最好是B/S的（毕竟没啥人愿意为查个AV号下一个Python什么的）。&lt;br /&gt;
前端没什么经验，还在门外面晃悠，在经历过一系列坎坷之后，终于让我给写出来了。&lt;/p&gt;
&lt;p&gt;20210110 更新：知乎大佬@mcfx破解了&lt;a href=&quot;https://www.zhihu.com/question/381784377&quot;&gt;BV号的算法&lt;/a&gt;，于是决定重写，将计算全部限制在浏览器端。&lt;/p&gt;
&lt;h1 id=&quot;0x01-项目仓库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x01-项目仓库&quot;&gt;&lt;/a&gt; 0x01 项目仓库&lt;/h1&gt;
&lt;p&gt;本程序使用JavaScript编写，托管在&lt;a href=&quot;https://gitee.com/&quot;&gt;Gitee 码云&lt;/a&gt;上。详情请参见仓库&lt;code&gt;README.md&lt;/code&gt;。&lt;br /&gt;
仓库地址：&lt;a href=&quot;https://gitee.com/wxx9248/Bilibili-avid-bvid-Converter&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="小型应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E5%B0%8F%E5%9E%8B%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="JavaScript" scheme="https://blog.wxx9248.tk/tags/JavaScript/"/>
    
    <category term="Bilibili" scheme="https://blog.wxx9248.tk/tags/Bilibili/"/>
    
    <category term="前端" scheme="https://blog.wxx9248.tk/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>C++ - 分离模板的声明和定义</title>
    <link href="https://blog.wxx9248.tk/2020/03/20/CPP-Seperate-Declaration-and-Definifion-of-Templates/"/>
    <id>https://blog.wxx9248.tk/2020/03/20/CPP-Seperate-Declaration-and-Definifion-of-Templates/</id>
    <published>2020-03-20T09:40:00.000Z</published>
    <updated>2021-04-29T16:55:30.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>当我们第一次编写C++模板的时候，基本上第一反应就是把模板函数/类当作普通函数/类对待：<br />把模板的声明放到一个.hpp文件中，模板的定义单独放置在一个.cpp文件中，然后其他的文件包括模板头文件。<br />然后我们兴高采烈地一通编译，发现链接器发出一堆莫名奇妙的“未定义引用”之呻吟……</p><p>这究竟是为什么？<del>到底是人性的扭曲，还是道德的沦丧？</del></p><p>本文就来探讨一下，为什么直接分离模板的声明和定义会出错，和一些常用的解决方案。</p><span id="more"></span><h1 id="0x01-原因分析"><a class="markdownIt-Anchor" href="#0x01-原因分析"></a> 0x01 原因分析</h1><h2 id="编译过程"><a class="markdownIt-Anchor" href="#编译过程"></a> 编译过程</h2><p>我们首先要清楚，编译器是怎么样编译一个工程的？</p><h3 id="编译单元"><a class="markdownIt-Anchor" href="#编译单元"></a> 编译单元</h3><p>首先，我们定义一个概念：编译单元。</p><blockquote><p>In C and C++ programming language terminology, a <strong>translation unit</strong> is the ultimate input to a C or C++ compiler from which an object file is generated. (Wikipedia)</p></blockquote><p>大意是，一个编译单元是让C/C++编译器产生<strong>一个</strong>目标文件的最终输入。</p><p>也就是说，编译出一个目标文件所需要输入的集合，是一个编译单元。<br />通常情况下，编译器对每一个.cpp文件，生成一个目标文件；<br />所以我们一般认为：<strong>一个.cpp文件就是一个编译单元</strong>。</p><h3 id="编译"><a class="markdownIt-Anchor" href="#编译"></a> 编译</h3><p>对于大型工程而言，一定存在多个编译单元。那么编译器是怎样处理多个编译单元的呢？</p><p>思考编译单元的定义，对于一个实打实的.cpp文件，编译器会对它单独生成一个目标文件。<br />而在处理一个编译单元的过程中，其他单元对编译器是<strong>完全不可见</strong>的。</p><p>这也是编译单元被叫做“单元”的原因：一个编译单元就是一个逻辑块。<br />对编译器来讲，里面只是包含一大堆函数而已。<br />编译器的工作只是将每一个函数中的代码转换为机器语言，然后留一个入口标记，方便调用，仅此而已。</p><p>可能有人会问，那外部函数怎么办？你说其他单元不可见，那如果其他单元的函数被调用了，怎么办？<br />编译器表示：这不关我的事。你说有不认识的符号？那考试的时候题不会咋办啊？<br />就打个标记呗。这题我不会，搁那儿不管了，我继续干我的活。</p><h3 id="链接"><a class="markdownIt-Anchor" href="#链接"></a> 链接</h3><p>我们知道，编译完了就该链接了嘛。</p><p>链接器把目标文件都读入内存，综合分析编译器编译出来的一个个目标文件，看看怎么给编译器擦屁股。<br />编译器留下了一大坨它不认识的符号，链接器就说，我先给这些符号标个号呗，到时候好找。<br />号编完了，链接器就瞅着看着，啊这个符号我认识，在那个目标文件里呢，我写个jmp到时候让CPU跳那里执行去；<br />啊这个符号好像在运行库里面有，我估摸着给它也编一个号，然后也插个jmp让CPU到那里面执行去……</p><p>活干完了，链接器再检查一遍卷子。<br />如果链接器发现，哟这里还有几个我也不认识，咋办呢？凉拌呢~甩锅给铲（产）bug的那位了，undefined reference走起~<br />如果链接器看着符号都有归属了，把平台的启动代码一抄，跟链接完的目标文件一粘，就输出去了。</p><p><del>然后铲bug的那位陷入了运行时错误的魔爪……</del></p><h2 id="模板的特性"><a class="markdownIt-Anchor" href="#模板的特性"></a> 模板的特性</h2><p>模板有什么特(kēng)性(diǎn)呢？</p><p>C++标准明确规定，只实例化被使用的模板，且只实例化被使用的类型。<br />这也就是说，编译器仅在模板<strong>被使用时</strong>生成相对应的目标代码。<br />当模板没有被使用时，在对应的目标代码中是看不到对应的代码的。</p><p>模板这个概念仅存在于编译期间，如果你没有使用模板（给模板的泛型类型提供一个具体类型），<br />编译器根本无从下手，因为它要将你的代码编译为机器代码，而机器语言可没有泛型这个概念，<br />都是实打实的一条条语句。CPU在栈操作和进行指针运算时都需要知道具体的值，如果没有具体类型，<br />编译器就无法知道这个类型的空间大小，也就没有办法计算那些运算时具体需要的值。</p><h2 id="水落石出"><a class="markdownIt-Anchor" href="#水落石出"></a> 水落石出</h2><p>答案似乎已经很明显了。</p><p>假设你的工程包括如下文件：main.cpp、template.cpp、template.hpp和Makefile</p><p>template.hpp中存放了模板对应的声明，template.cpp中存放了模板的定义，<br />而main.cpp中直接调用了模板函数。template.cpp和main.cpp都包含了template.hpp。</p><p>当编译器编译main.cpp时，发现里面只有一句函数声明（在已包含的.hpp中），而没有定义，<br />它认为这个可能是个外部符号，做了一个标记，输出了目标文件，把锅甩给了链接器；</p><p>当编译器编译template.cpp时，发现里面有模板的声明和定义，但是好像没有啥地方使用了这个模板函数。<br />于是，编译器就忽略了这个模板函数，输出了一个<strong>空的</strong>目标文件；</p><p>当链接器拿到这两个目标文件时，傻眼了——编译器给的main.o里面有一个外部符号，<br />但是在其他任何目标文件（以及系统运行库）中都找不到对应的符号……<br />于是它就放弃了，输出来一句“undefined reference”，丢给铲bug的自己分析去。</p><h1 id="0x02-解决方案"><a class="markdownIt-Anchor" href="#0x02-解决方案"></a> 0x02 解决方案</h1><h2 id="一般的解决方法"><a class="markdownIt-Anchor" href="#一般的解决方法"></a> 一般的解决方法</h2><p>通常的C++入门教程，或者是图省事的答主会让你直接把定义也塞到头文件中，<br />这样任何.cpp文件都会充斥着模板的身影，也就不会出现找不到符号的问题了。</p><p>但是这样做的话，会显著加大头文件的大小，不仅会给阅读和维护代码的人带来很多不便，<br />也会给预处理器和编译器造成很多负担，从而整个工程的编译都会被拖慢，既浪费时间又浪费算力。</p><p>其次，这个做法无法将模板模块化。所有的模板函数都被编译到零零散散的可执行文件和动态链接库中。<br />这将增加程序二进制层的耦合性，使得反汇编调试更加不容易进行。</p><h2 id="进一步的解决方法"><a class="markdownIt-Anchor" href="#进一步的解决方法"></a> 进一步的解决方法</h2><p>有一些教程和书籍会建议将模板的定义放置在一个单独的.ipp文件中，<br />然后在存放模板声明的.hpp头文件的最后一行包含.ipp文件。</p><p>这样做可以降低代码的维护难度，<br />而且当你需要你的模板能被使用者<strong>任意地实例化</strong>的话，这似乎是首选的解决方案。<br />大名鼎鼎的第三方C++库<a href="https://www.boost.org">Boost</a>，<br />就是采用了这种方法——你可以对其中的模板传入任何合理的类型。</p><p>但是这样并不能减轻编译器的负担，同样不能解决二进制层耦合的问题。<br />是否有更好的解决方法呢？</p><h2 id="推荐的解决方法"><a class="markdownIt-Anchor" href="#推荐的解决方法"></a> 推荐的解决方法</h2><p>一般推荐的方法是将模板的声明和定义分装到template.hpp和template.cpp文件中，<br />在template.cpp中将其他.cpp文件中所有需要的、对应类型的模板<strong>显式实例化</strong>出来，<br />这样编译器在编译模板定义时，就会产生模板对应的代码，链接器也就不会找不到符号了。</p><p>或者你可以发挥创意，将显式实例化语句单独分离到一个temp_instantiation.hpp文件中，然后在template.cpp文件中包含它，<br />但是这个头文件<strong>不能</strong>被其他.cpp文件包含。</p><p>同时，模板实例化后的目标代码都会存放在对应名字的目标文件中，<br />二进制层面的耦合性也就被解决了。<br />你还可以将模板实例化后的代码编译成动态链接库，随着软件分发。</p><p>这种方法的唯一缺点就是，你<strong>不能任意实例化</strong>一个模板。<br />必须要先手动在模板<strong>定义</strong>文件中显式实例化对应的类型，才能在程序的其他地方使用。<br />对于未显式实例化的模板类型，链接器会爆“undefined reference”错误。</p><p>示例代码：</p><figure class="highlight makefile"><figcaption><span>Makefile</span></figcaption><table><tr><td class="code"><pre><span class="line">OUT=Test.exe</span><br><span class="line">OBJ= main.o template.o</span><br><span class="line">CC=g++</span><br><span class="line"></span><br><span class="line"><span class="section">Test: <span class="variable">$(OBJ)</span></span></span><br><span class="line"><span class="variable">$(CC)</span> -s -o <span class="variable">$(OUT)</span> <span class="variable">$(OBJ)</span></span><br><span class="line"></span><br><span class="line"><span class="section">main.o: template.hpp</span></span><br><span class="line"><span class="section">template.o: template.hpp</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: clean run</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">rm -rf *.exe *.o</span><br><span class="line"></span><br><span class="line"><span class="section">run:</span></span><br><span class="line">.\\<span class="variable">$(OUT)</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>main.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;template.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">    cout &lt;&lt; <span class="built_in">add</span>(<span class="number">1</span>, <span class="number">2.0f</span>) &lt;&lt; endl; <span class="comment">// 只能使用add&lt;int, float&gt;，不能使用其他类型</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>template.hpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> __TEMPLATE_HPP</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> __TEMPLATE_HPP</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line">auto add(const T1 &amp;a, const T2 &amp;b) -&gt; decltype (a + b);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>template.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;template.hpp&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 显式实例化</span></span><br><span class="line"><span class="keyword">template</span></span><br><span class="line"><span class="keyword">auto</span> add&lt;<span class="keyword">int</span>, <span class="keyword">float</span>&gt;(<span class="keyword">const</span> <span class="keyword">int</span> &amp;a, <span class="keyword">const</span> <span class="keyword">float</span> &amp;b) -&gt; <span class="keyword">decltype</span> (a + b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span> &lt;<span class="class"><span class="keyword">class</span> <span class="title">T1</span>, <span class="keyword">class</span> <span class="title">T2</span>&gt;</span></span><br><span class="line">auto add(const T1 &amp;a, const T2 &amp;b) -&gt; decltype (a + b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;当我们第一次编写C++模板的时候，基本上第一反应就是把模板函数/类当作普通函数/类对待：&lt;br /&gt;
把模板的声明放到一个.hpp文件中，模板的定义单独放置在一个.cpp文件中，然后其他的文件包括模板头文件。&lt;br /&gt;
然后我们兴高采烈地一通编译，发现链接器发出一堆莫名奇妙的“未定义引用”之呻吟……&lt;/p&gt;
&lt;p&gt;这究竟是为什么？&lt;del&gt;到底是人性的扭曲，还是道德的沦丧？&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;本文就来探讨一下，为什么直接分离模板的声明和定义会出错，和一些常用的解决方案。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="计算机语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C++" scheme="https://blog.wxx9248.tk/tags/C/"/>
    
    <category term="泛型编程" scheme="https://blog.wxx9248.tk/tags/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>在Hexo引擎上搭建Gitalk评论系统</title>
    <link href="https://blog.wxx9248.tk/2020/02/20/Hexo-Gitalk-Tricks/"/>
    <id>https://blog.wxx9248.tk/2020/02/20/Hexo-Gitalk-Tricks/</id>
    <published>2020-02-19T19:43:00.000Z</published>
    <updated>2021-04-29T16:56:27.669Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>最近心血来潮，想把自己的博客搞的再fancy一点。自己博客缺一个评论系统，刚好自己用的这个主题也支持，就想着实装一个。</p><p>这个主题支持<a href="https://github.com/imsun/gitment">Gitment</a>和<a href="https://github.com/imsun/gitment">Gitalk</a>两种方案，都是拿issue当评论区的，实际功能差不多。<br />去Github上看了一下，Gitment已经很长时间没有更新了，就选了Gitalk当评论系统。</p><span id="more"></span><h1 id="0x01-流程"><a class="markdownIt-Anchor" href="#0x01-流程"></a> 0x01 流程</h1><h2 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h2><p>阅读Gitalk的docs，发现配置起来还是蛮容易的，再加上这个主题的pug模板又为你省了一堆事，最后你只需要配置主题<code>_config.yml</code>：</p><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">gitalk:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="string">xxx</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="string">xxx</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">Blog-comments</span></span><br><span class="line">  <span class="attr">owner:</span> <span class="string">wxx9248</span></span><br><span class="line">  <span class="attr">admin:</span> <span class="string">wxx9248</span></span><br></pre></td></tr></table></figure><p><code>enable</code>设为<code>true</code>；<br /><code>client_id</code>和<code>client_secret</code>会在申请OAuth的时候生成；<br /><code>repo</code>填评论区repo名称；<br /><code>owner</code>是Github账户名；<br /><code>admin</code>可以是一个数组，在这个数组里的Github帐户可以初始化一个新issue。</p><h2 id="开始实践"><a class="markdownIt-Anchor" href="#开始实践"></a> 开始实践</h2><p>首先去<a href="https://github.com/settings/applications/new">申请一个OAuth应用</a>：<img src="/images/Hexo-Gitalk-Tricks/OAuth-Application-Registry.png" alt="OAuth应用申请表单" /></p><ul><li>Application name：你喜欢的名称；</li><li>Homepage URL：博客主页的URL；</li><li>Application description：可选，填应用简介。</li><li><strong>Authorization callback URL</strong>：回调URL，一般跟Homepage URL相同。</li></ul><p>OAuth应用创建完之后，Github会分配给你<code>client_id</code>和<code>client_secret</code>，将它们填入<code>_config.yml</code>相应字段里面。<br />再重新生成、部署Hexo页面即可。</p><h1 id="0x02-注意事项"><a class="markdownIt-Anchor" href="#0x02-注意事项"></a> 0x02 注意事项</h1><p>请注意，对于你的每一个含有评论系统的页面，它们的URL不能包含需要URL编码的特殊字符，如空格。<br />请尽量只使用字母、数字和连字符<code>-</code><br />否则Github在OAuth回调的时候会出现莫名其妙的错误！<br />这是我开了F12调试各种抓包测试换来的教训。<br />Gitalk会显示于基本上每一个页面，除了主页、文章概览和404页面等。<br />如果有非md文件生成的页面，这些页面的评论区都会指向一个issue，而这个issue是用你的主页标题命名的。如下图：<img src="/images/Hexo-Gitalk-Tricks/Universal-comment-section.png" alt="Github issue页面" /><img src="/images/Hexo-Gitalk-Tricks/Universal-comment-section-inpage.png" alt="某游离页面" /></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;最近心血来潮，想把自己的博客搞的再fancy一点。自己博客缺一个评论系统，刚好自己用的这个主题也支持，就想着实装一个。&lt;/p&gt;
&lt;p&gt;这个主题支持&lt;a href=&quot;https://github.com/imsun/gitment&quot;&gt;Gitment&lt;/a&gt;和&lt;a href=&quot;https://github.com/imsun/gitment&quot;&gt;Gitalk&lt;/a&gt;两种方案，都是拿issue当评论区的，实际功能差不多。&lt;br /&gt;
去Github上看了一下，Gitment已经很长时间没有更新了，就选了Gitalk当评论系统。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="网站建设" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E7%BD%91%E7%AB%99%E5%BB%BA%E8%AE%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.wxx9248.tk/tags/Hexo/"/>
    
    <category term="Gitalk" scheme="https://blog.wxx9248.tk/tags/Gitalk/"/>
    
  </entry>
  
  <entry>
    <title>尝试编译小米8 UEFI固件</title>
    <link href="https://blog.wxx9248.tk/2020/02/19/Compile-EDK2-for-dipper/"/>
    <id>https://blog.wxx9248.tk/2020/02/19/Compile-EDK2-for-dipper/</id>
    <published>2020-02-18T21:01:00.000Z</published>
    <updated>2021-04-29T16:55:06.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>前些时间，栗子酱（@Ritsu909）私下发给我一个小米8的<a href="/assets/Compile-EDK2-for-dipper/MI8_UEFI.img">UEFI固件</a>和托管在Github上的<a href="https://github.com/NekokeCore/edk2_dipper_SDM845_Xiaomi_mi_8">源代码</a>，说让我试一下。<br />刚好自己有这个机子，也已经解锁了，就准备试试，毕竟这个对我这个不怎么接触嵌入式（暂时）的人还是挺新奇的。</p><span id="more"></span><p>关机进fastboot，插上手机，执行<code>fastboot boot boot.img</code>，闪过去一大堆代码以后，屏幕最后留下了一串stack traceback和register dump，看样子像是引导失败了。<br /><img src="/images/Compile-EDK2-for-dipper/UEFI_Failure.jpg" alt="第一次引导" /><br /><video width=100% controls><br /><source src="/videos/Compile-EDK2-for-dipper/UEFI_Failure.mp4" type="video/mp4"><br />你的浏览器不支持HTML 5 😦<br /></video></p><p>等我跟栗子酱反馈完上图之后，我又尝试了一次，这一次引导成功了：<img src="/images/Compile-EDK2-for-dipper/UEFI_Success.jpg" alt="UEFI Shell" /><br />可惜我没有外置键盘（暂时），如果有的话我会进行进一步测试（根据Github上的描述，这个UEFI固件已经能引导半个Fedora内核了）。</p><p>由于栗子酱对ARM64平台的热衷，我也准备时刻关注这个项目。</p><p>既然现在没有外置键盘，那我就得先熟悉熟悉EDK和这个项目了。<br />就先从编译出一份镜像开始吧。</p><h1 id="0x01-工作环境"><a class="markdownIt-Anchor" href="#0x01-工作环境"></a> 0x01 工作环境</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>操作系统</td><td>Ubuntu 18.04 LTS x64 (VMWare 15.1)</td></tr><tr><td>默认Shell解释器</td><td><code>/usr/bin/fish</code></td></tr><tr><td>C编译器 (Native)</td><td>GCC version 7.4.0</td></tr><tr><td>C编译器 (AArch64)</td><td>GCC version 7.4.0</td></tr><tr><td>EDK2 版本</td><td><code>edk2-stable201911</code></td></tr><tr><td>MI 8 Package</td><td>最后一次commit<br>Jan 7, 2020</td></tr><tr><td>手机硬件相关信息</td><td><code>hw-revision</code>: <code>20001</code><br><code>cpuid</code>: <code>0x898bbd5f</code><br><code>board_version</code>: <code>3.3.0</code></td></tr></tbody></table><h1 id="0x02-工作流程"><a class="markdownIt-Anchor" href="#0x02-工作流程"></a> 0x02 工作流程</h1><h2 id="下载edk2"><a class="markdownIt-Anchor" href="#下载edk2"></a> 下载EDK2</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; wget https://github.com/tianocore/edk2/archive/edk2-stable201911.zip</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; unzip edk2-stable201911.zip</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; mv edk2-edk2-stable201911/ edk2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; git <span class="built_in">clone</span> https://github.com/NekokeCore/edk2_dipper_SDM845_Xiaomi_mi_8</span><br></pre></td></tr></table></figure><h2 id="分析文件结构"><a class="markdownIt-Anchor" href="#分析文件结构"></a> 分析文件结构</h2><p>P.S.:本人没有接触过EDK开发，所以以下分析肯定会有不专业的地方。如有不妥，请在留言区指正。</p><p>首先看到<code>edk2_dipper_SDM845_Xiaomi_mi_8</code>中的<code>XiaomiMI8Pkg</code>，跟<code>edk2</code>下面的各个Package命名很相似。<br />应该是要把<code>XiaomiMI8Pkg</code>放到<code>edk2</code>下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; mv edk2_dipper_SDM845_Xiaomi_mi_8/XiaomiMI8Pkg/ edk2/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; mv edk2_dipper_SDM845_Xiaomi_mi_8/dipper.dtb edk2/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; mv edk2_dipper_SDM845_Xiaomi_mi_8/build.sh edk2/build.sh</span><br></pre></td></tr></table></figure><p><code>dipper.dtb</code>应该是制作好dipper的设备树文件。</p><p>因为我发现<code>build.sh</code>有点问题，所以我直接分析代码。从提供的<code>build.sh</code>来看：</p><figure class="highlight bash"><figcaption><span>build.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># based on the instructions from edk2-platform</span></span><br><span class="line"><span class="built_in">echo</span> cleanning BuidFiles</span><br><span class="line">rm -rf workspace/*</span><br><span class="line"><span class="built_in">echo</span> Done.</span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">. build_common.sh</span><br><span class="line"><span class="comment"># not actually GCC5; it&#x27;s GCC7 on Ubuntu 18.04.</span></span><br><span class="line">GCC5_AARCH64_PREFIX=aarch64-linux-gnu- build -s -n 0 -a AARCH64 -t GCC5 -p XiaomiMI8Pkg/XiaomiMI8Pkg.dsc</span><br><span class="line">gzip -c &lt; workspace/Build/XiaomiMI8Pkg/DEBUG_GCC5/FV/XIAOMIMI8PKG_UEFI.fd &gt;uefi.img</span><br><span class="line">cat dipper.dtb &gt;&gt;uefi.img</span><br><span class="line">rm -rf /mnt/hgfs/HostWorkSpaces/ADB/platform-tools/uefi.img</span><br><span class="line">cp uefi.img /mnt/hgfs/HostWorkSpaces/ADB/platform-tools/</span><br></pre></td></tr></table></figure><p>首先执行完<code>build_common.sh</code>之后，设置了交叉编译器的名称前缀。<br />然后之后应该是换一行的。执行<code>build</code>，生成原始UEFI固件文件。<br />再将固件文件通过<code>gzip</code>压缩，写入<code>uefi.img</code>。<br />再将<code>dipper.dtb</code>追加到<code>uefi.img</code>的尾部，即为最后的启动镜像。</p><p>但是有个问题，我并没有在任何地方找到<code>build_common.sh</code><br />在研究了EDK2的官方文档以后，我发现这个sh文件应该指的是<code>edk2/edksetup.sh</code><br />这个sh文件设置了EDK2的开发环境。从这里我也得出这个build命令是<code>edk2/BaseTools/Source/Python/build/build.py</code><br />这样就解释通了。</p><p>同时，我在翻阅EDK2官方文档的时候，发现需要先编译<code>BaseTools</code>。<br />这也印证了作者提供的<code>firstrun.sh</code>：</p><figure class="highlight bash"><figcaption><span>firstrun.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># based on the instructions from edk2-platform</span></span><br><span class="line"><span class="comment"># do this first:</span></span><br><span class="line"><span class="comment"># https://github.com/tianocore/tianocore.github.io/wiki/Using-EDK-II-with-Native-GCC#Install_required_software_from_apt</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">. build_common.sh</span><br><span class="line">make -C ../edk2/BaseTools</span><br></pre></td></tr></table></figure><h2 id="编译edk2basetools"><a class="markdownIt-Anchor" href="#编译edk2basetools"></a> 编译<code>EDK2/BaseTools</code></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/edk2&gt; make -C BaseTools/ </span><br></pre></td></tr></table></figure><h2 id="修改buildsh"><a class="markdownIt-Anchor" href="#修改buildsh"></a> 修改<code>build.sh</code></h2><figure class="highlight bash"><figcaption><span>build.sh</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># Based on the instructions from edk2-platform</span></span><br><span class="line">rm UEFI.img</span><br><span class="line"><span class="comment"># Erasing specific variables</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line"><span class="comment"># Iniliaze environment</span></span><br><span class="line">. edksetup.sh</span><br><span class="line"><span class="comment"># Set cross compiler</span></span><br><span class="line"><span class="built_in">export</span> GCC5_AARCH64_PREFIX=aarch64-linux-gnu-</span><br><span class="line"><span class="comment"># Build</span></span><br><span class="line">build -n 0 -a AARCH64 -t GCC5 -p XiaomiMI8Pkg/XiaomiMI8Pkg.dsc</span><br><span class="line">gzip -c &lt; Build/XiaomiMI8Pkg/DEBUG_GCC5/FV/XIAOMIMI8PKG_UEFI.fd &gt;UEFI.img</span><br><span class="line">cat dipper.dtb &gt;&gt;UEFI.img</span><br></pre></td></tr></table></figure><h2 id="第一次编译尝试"><a class="markdownIt-Anchor" href="#第一次编译尝试"></a> 第一次编译尝试</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/edk2&gt; chmod +x *.sh</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/edk2&gt; ./build.sh</span><br></pre></td></tr></table></figure><p><code>build.py</code>返回了错误：<br />提示找不到<code>edk2/IntelFrameworkModulePkg/Library/LzmaCustomDecompressLib/LzmaCustomDecompressLib.inf</code>：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Processing meta-data .</span><br><span class="line">Architecture(s)  &#x3D; AARCH64</span><br><span class="line">Build target     &#x3D; DEBUG</span><br><span class="line">Toolchain        &#x3D; GCC5</span><br><span class="line"></span><br><span class="line">Active Platform          &#x3D; &#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;XiaomiMI8Pkg&#x2F;XiaomiMI8Pkg.dsc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">build.py...</span><br><span class="line">&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;XiaomiMI8Pkg&#x2F;XiaomiMI8Pkg.dsc(101): error 000E: File&#x2F;directory not found in workspace</span><br><span class="line">        &#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;IntelFrameworkModulePkg&#x2F;Library&#x2F;LzmaCustomDecompressLib&#x2F;LzmaCustomDecompressLib.inf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- Failed -</span><br><span class="line">Build end time: 22:17:38, Feb.19 2020</span><br><span class="line">Build total time: 00:00:01</span><br></pre></td></tr></table></figure><p>我去EDK2的Git源看了下，不论是stable release，还是最新的commit，都找不到<code>IntelFrameworkModulePkg</code>的影子。<br />于是我就去求助万能的Google，搜了一下，在<a href="https://github.com/tianocore/edk2/commit/aa7fc1c11c3d57d82842dbede50d064639671a98">这个commit</a>上：</p><blockquote><p>Remove IntelFrameworkModulePkg</p></blockquote><p><code>IntelFrameworkModulePkg</code>已经EDK2移除了。</p><p>然后我在<a href="https://android.googlesource.com/device/linaro/bootloader/edk2/">Google Source</a>上找到了一份还没有移除这个包的EDK2拷贝克隆下来，然后直接合并到一个文件夹：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; mkdir google</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/workspace&gt; <span class="built_in">cd</span> google/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/google&gt; git <span class="built_in">clone</span> https://android.googlesource.com/device/linaro/bootloader/edk2/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/google&gt; cp -rn edk2/ ../</span><br></pre></td></tr></table></figure><h2 id="第二次编译尝试"><a class="markdownIt-Anchor" href="#第二次编译尝试"></a> 第二次编译尝试</h2><p>在执行<code>build.sh</code>后，<code>build.py</code>又返回了错误：<br />提示找不到<code>edk2/MdeModulePkg/Library/BaseUefiTianoCustomDecompressLib/BaseUefiTianoCustomDecompressLib.inf</code></p><p>我用同样的方法在Google上找了一圈，发现<code>BaseUefiTianoCustomDecompressLib</code>被合并至<code>edk2/MdePkg/Library/BaseUefiDecompressLib</code>里面了</p><p>那就把<code>BaseUefiTianoCustomDecompressLib</code>拷回至<code>MdeModulePkg</code>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/edk2&gt; <span class="built_in">cd</span> MdePkg/Library/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/e/M/Library&gt; cp -r BaseUefiDecompressLib/ ../../MdeModulePkg/Library/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/e/M/Library&gt; <span class="built_in">cd</span> ../../MdeModulePkg/Library/</span><br><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/e/M/Library&gt; mv BaseUefiDecompressLib/ BaseUefiTianoCustomDecompressLib/</span><br></pre></td></tr></table></figure><h2 id="第三次编译尝试"><a class="markdownIt-Anchor" href="#第三次编译尝试"></a> 第三次编译尝试</h2><p>GCC返回了错误：<br />提示隐式函数声明：<code>implicit declaration of function ‘NetLibDetectMediaWaitTimeout’</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;Ifconfig.c: In function ‘IfConfigShowInterfaceInfo’:</span><br><span class="line">&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;Ifconfig.c:573:24: error: implicit declaration of function ‘NetLibDetectMediaWaitTimeout’; did you mean ‘NetLibDetectMedia’? [-Werror&#x3D;implicit-function-declaration]</span><br><span class="line">    if (EFI_SUCCESS &#x3D;&#x3D; NetLibDetectMediaWaitTimeout (IfCb-&gt;NicHandle, 0, &amp;MediaStatus)) &#123;</span><br><span class="line">                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">                        NetLibDetectMedia</span><br><span class="line">cc1: all warnings being treated as errors</span><br><span class="line">GNUmakefile:382: recipe for target &#39;&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;Build&#x2F;XiaomiMI8Pkg&#x2F;DEBUG_GCC5&#x2F;AARCH64&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;UefiShellNetwork1CommandsLib&#x2F;OUTPUT&#x2F;Ifconfig.obj&#39; failed</span><br><span class="line">make: *** [&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;Build&#x2F;XiaomiMI8Pkg&#x2F;DEBUG_GCC5&#x2F;AARCH64&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;UefiShellNetwork1CommandsLib&#x2F;OUTPUT&#x2F;Ifconfig.obj] Error 1</span><br></pre></td></tr></table></figure><p>看起来这个函数没有进行声明，直接进行了调用。<br />但是通过阅读源代码和<code>Makefile</code>发现，发现其实这个函数是有显式声明的。<br />接下来进行追踪。</p><figure class="highlight c"><figcaption><span>Ifconfig_excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/** @file</span></span><br><span class="line"><span class="comment">The implementation for Shell command ifconfig based on IP4Config2 protocol.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(C) Copyright 2013-2015 Hewlett-Packard Development Company, L.P.&lt;BR&gt;</span></span><br><span class="line"><span class="comment">Copyright (c) 2006 - 2018, Intel Corporation. All rights reserved.&lt;BR&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SPDX-License-Identifier: BSD-2-Clause-Patent</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;UefiShellNetwork1CommandsLib.h&quot;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight c"><figcaption><span>Ping_excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/** @file</span></span><br><span class="line"><span class="comment">The implementation for Ping shell command.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">(C) Copyright 2015 Hewlett-Packard Development Company, L.P.&lt;BR&gt;</span></span><br><span class="line"><span class="comment">Copyright (c) 2009 - 2018, Intel Corporation. All rights reserved.&lt;BR&gt;</span></span><br><span class="line"><span class="comment">(C) Copyright 2016 Hewlett Packard Enterprise Development LP&lt;BR&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SPDX-License-Identifier: BSD-2-Clause-Patent</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;UefiShellNetwork1CommandsLib.h&quot;</span></span></span><br></pre></td></tr></table></figure><p>追踪<code>UefiShellNetwork1CommandsLib.h：</code></p><figure class="highlight c"><figcaption><span>UefiShellNetwork1CommandsLib_excerpt.h</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/** @file</span></span><br><span class="line"><span class="comment">header file for NULL named library for network1 shell command functions.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Copyright (c) 2010 - 2016, Intel Corporation. All rights reserved. &lt;BR&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">SPDX-License-Identifier: BSD-2-Clause-Patent</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _UEFI_SHELL_NETWORK1_COMMANDS_LIB_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _UEFI_SHELL_NETWORK1_COMMANDS_LIB_H_</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Uefi.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Guid/ShellLibHiiGuid.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/Cpu.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/ServiceBinding.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/Ip6.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/Ip6Config.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/Ip4.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/Ip4Config2.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Protocol/Arp.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/BaseLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/BaseMemoryLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/DebugLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/MemoryAllocationLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/PcdLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/ShellCommandLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/ShellLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/SortLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/UefiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/UefiRuntimeServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/UefiBootServicesTableLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/HiiLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/NetLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/DevicePathLib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Library/PrintLib.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>对编译参数进行分析，发现编译的时候会搜索<code>Package</code>下的<code>Include</code>文件夹：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;aarch64-linux-gnu-gcc&quot;</span><br><span class="line">-ffunction-sections -fdata-sections</span><br><span class="line">-DSTRING_ARRAY_NAME&#x3D;UefiShellNetwork1CommandsLibStrings</span><br><span class="line">-g</span><br><span class="line">-Os</span><br><span class="line">-fshort-wchar -fno-builtin -fno-strict-aliasing</span><br><span class="line">-Wall -Werror -Wno-array-bounds</span><br><span class="line">-include AutoGen.h</span><br><span class="line">-fno-common</span><br><span class="line">-mlittle-endian</span><br><span class="line">-fno-short-enums -fverbose-asm -funsigned-char -ffunction-sections -fdata-sections</span><br><span class="line">-Wno-address</span><br><span class="line">-fno-asynchronous-unwind-tables -fno-unwind-tables -fno-pic -fno-pie -ffixed-x18</span><br><span class="line">-mcmodel&#x3D;small</span><br><span class="line">-flto</span><br><span class="line">-Wno-unused-but-set-variable -Wno-unused-const-variable</span><br><span class="line">-c</span><br><span class="line">-o &#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;Build&#x2F;XiaomiMI8Pkg&#x2F;DEBUG_GCC5&#x2F;AARCH64&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;UefiShellNetwork1CommandsLib&#x2F;OUTPUT&#x2F;.&#x2F;Ifconfig.obj</span><br><span class="line">-I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;Build&#x2F;XiaomiMI8Pkg&#x2F;DEBUG_GCC5&#x2F;AARCH64&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;UefiShellNetwork1CommandsLib&#x2F;DEBUG -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;MdePkg -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;MdePkg&#x2F;Include -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;MdePkg&#x2F;Include&#x2F;AArch64 -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;ShellPkg -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;ShellPkg&#x2F;Include -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;MdeModulePkg -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;MdeModulePkg&#x2F;Include -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;NetworkPkg -I&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;NetworkPkg&#x2F;Include</span><br><span class="line">&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;ShellPkg&#x2F;Library&#x2F;UefiShellNetwork1CommandsLib&#x2F;Ifconfig.c</span><br></pre></td></tr></table></figure><p>于是定位<code>edk2/NetworkPkg/Include/Library/NetLib.h</code>：</p><figure class="highlight c"><figcaption><span>NetLib_excerpt.h</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">Detect media state for a network device. This routine will wait for a period of time at</span></span><br><span class="line"><span class="comment">a specified checking interval when a certain network is under connecting until connection</span></span><br><span class="line"><span class="comment">process finishes or timeout. If Aip protocol is supported by low layer drivers, three kinds</span></span><br><span class="line"><span class="comment">of media states can be detected: EFI_SUCCESS, EFI_NOT_READY and EFI_NO_MEDIA, represents</span></span><br><span class="line"><span class="comment">connected state, connecting state and no media state respectively. When function detects</span></span><br><span class="line"><span class="comment">the current state is EFI_NOT_READY, it will loop to wait for next time&#x27;s check until state</span></span><br><span class="line"><span class="comment">turns to be EFI_SUCCESS or EFI_NO_MEDIA. If Aip protocol is not supported, function will</span></span><br><span class="line"><span class="comment">call NetLibDetectMedia() and return state directly.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@param[in]   ServiceHandle    The handle where network service binding protocols are</span></span><br><span class="line"><span class="comment">                                installed on.</span></span><br><span class="line"><span class="comment">@param[in]   Timeout          The maximum number of 100ns units to wait when network</span></span><br><span class="line"><span class="comment">                                is connecting. Zero value means detect once and return</span></span><br><span class="line"><span class="comment">                                immediately.</span></span><br><span class="line"><span class="comment">@param[out]  MediaState       The pointer to the detected media state.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@retval EFI_SUCCESS           Media detection success.</span></span><br><span class="line"><span class="comment">@retval EFI_INVALID_PARAMETER ServiceHandle is not a valid network device handle or</span></span><br><span class="line"><span class="comment">                                MediaState pointer is NULL.</span></span><br><span class="line"><span class="comment">@retval EFI_DEVICE_ERROR      A device error occurred.</span></span><br><span class="line"><span class="comment">@retval EFI_TIMEOUT           Network is connecting but timeout.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line">EFI_STATUS</span><br><span class="line">EFIAPI</span><br><span class="line">NetLibDetectMediaWaitTimeout (</span><br><span class="line">IN  EFI_HANDLE            ServiceHandle,</span><br><span class="line">IN  UINT64                Timeout,</span><br><span class="line">OUT EFI_STATUS            *MediaState</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>找到了函数声明。<br />按理来说，包含关系是确定的，但是编译器找不到函数的声明。</p><p>在<code>NetworkPkg</code>下查找包含<code>NetLibDetectMediaWaitTimeout</code>字符串的文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/e/NetworkPkg&gt; grep -rn <span class="string">&quot;NetLibDetectMediaWaitTimeout&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Dhcp4Dxe&#x2F;Dhcp4Impl.c:811:  NetLibDetectMediaWaitTimeout (DhcpSb-&gt;Controller, DHCP_CHECK_MEDIA_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">Dhcp6Dxe&#x2F;Dhcp6Impl.c:102:  NetLibDetectMediaWaitTimeout (Service-&gt;Controller, DHCP_CHECK_MEDIA_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">DnsDxe&#x2F;DnsDhcp.c:314:  NetLibDetectMediaWaitTimeout (Controller, DNS_CHECK_MEDIA_GET_DHCP_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">DnsDxe&#x2F;DnsDhcp.c:633:  NetLibDetectMediaWaitTimeout (Controller, DNS_CHECK_MEDIA_GET_DHCP_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">HttpBootDxe&#x2F;HttpBootImpl.c:575:  NetLibDetectMediaWaitTimeout (Private-&gt;Controller, HTTP_BOOT_CHECK_MEDIA_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">IScsiDxe&#x2F;IScsiDhcp.c:452:  NetLibDetectMediaWaitTimeout (Controller, ISCSI_CHECK_MEDIA_GET_DHCP_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">IScsiDxe&#x2F;IScsiDhcp6.c:404:  NetLibDetectMediaWaitTimeout (Controller, ISCSI_CHECK_MEDIA_GET_DHCP_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">IScsiDxe&#x2F;IScsiProto.c:447:  NetLibDetectMediaWaitTimeout (Session-&gt;Private-&gt;Controller, ISCSI_CHECK_MEDIA_LOGIN_WAITING_TIME, &amp;MediaStatus);</span><br><span class="line">Include&#x2F;Library&#x2F;NetLib.h:1307:NetLibDetectMediaWaitTimeout (</span><br><span class="line">Library&#x2F;DxeNetLib&#x2F;DxeNetLib.c:2601:NetLibDetectMediaWaitTimeout (</span><br><span class="line">UefiPxeBcDxe&#x2F;PxeBcImpl.c:2366:  NetLibDetectMediaWaitTimeout (Private-&gt;Controller, PXEBC_CHECK_MEDIA_WAITING_TIME, &amp;MediaStatus);</span><br></pre></td></tr></table></figure><p>在<code>Library/DxeNetLib/DxeNetLib.c</code>文件中找到了函数定义。</p><p>由于我不是很清楚怎么让它识别到那个函数，暂且先屏蔽掉这个函数的调用吧。</p><p>在<code>edk2/Conf/tools_def.txt</code>中，查找所有<code>-Werror</code>，替换为空。<br />在<code>edk2/ShellPkg/Library/UefiShellNetwork1CommandsLib/Ifconfig.c</code>中，作如下修改：</p><figure class="highlight c"><figcaption><span>Ifconfig_excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Get Media State.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//if (EFI_SUCCESS == NetLibDetectMediaWaitTimeout (IfCb-&gt;NicHandle, 0, &amp;MediaStatus)) &#123;</span></span><br><span class="line"><span class="comment">//if (MediaStatus != EFI_SUCCESS) &#123;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="number">0</span>) &#123;</span><br><span class="line">    ShellPrintHiiEx (<span class="number">-1</span>, <span class="number">-1</span>, <span class="literal">NULL</span>, STRING_TOKEN (STR_IFCONFIG_INFO_MEDIA_STATE), gShellNetwork1HiiHandle, <span class="string">L&quot;Media disconnected&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ShellPrintHiiEx (<span class="number">-1</span>, <span class="number">-1</span>, <span class="literal">NULL</span>, STRING_TOKEN (STR_IFCONFIG_INFO_MEDIA_STATE), gShellNetwork1HiiHandle, <span class="string">L&quot;Media present&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*&#125; else &#123;</span></span><br><span class="line"><span class="comment">ShellPrintHiiEx (-1, -1, NULL, STRING_TOKEN (STR_IFCONFIG_INFO_MEDIA_STATE), gShellNetwork1HiiHandle, L&quot;Media state unknown&quot;);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br></pre></td></tr></table></figure><p>同样，在<code>edk2/ShellPkg/Library/UefiShellNetwork1CommandsLib/Ping.c</code>中，作如下修改：</p><figure class="highlight c"><figcaption><span>Ping_excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (UnspecifiedSrc) &#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Check media.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//NetLibDetectMediaWaitTimeout (HandleBuffer[HandleIndex], 0, &amp;MediaStatus);</span></span><br><span class="line"><span class="comment">//if (MediaStatus != EFI_SUCCESS) &#123;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Skip this one.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样做很不安全，但是现在我暂时想不出什么办法。</p><h2 id="第四次编译尝试"><a class="markdownIt-Anchor" href="#第四次编译尝试"></a> 第四次编译尝试</h2><p>脚本报告编译成功：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Fd File Name:XIAOMIMI8PKG_UEFI (&#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;Build&#x2F;XiaomiMI8Pkg&#x2F;DEBUG_GCC5&#x2F;FV&#x2F;XIAOMIMI8PKG_UEFI.fd)</span><br><span class="line"></span><br><span class="line">Generate Region at Offset 0x0</span><br><span class="line">Region Size &#x3D; 0x8000</span><br><span class="line">Region Name &#x3D; DATA</span><br><span class="line"></span><br><span class="line">Generate Region at Offset 0x8000</span><br><span class="line">Region Size &#x3D; 0x1F8000</span><br><span class="line">Region Name &#x3D; FV</span><br><span class="line"></span><br><span class="line">Generating FVMAIN_COMPACT FV</span><br><span class="line">#</span><br><span class="line">Generating FVMAIN FV</span><br><span class="line">#######################</span><br><span class="line">GUID cross reference file can be found at &#x2F;home&#x2F;wxx9248&#x2F;workspace&#x2F;edk2&#x2F;Build&#x2F;XiaomiMI8Pkg&#x2F;DEBUG_GCC5&#x2F;FV&#x2F;Guid.xref</span><br><span class="line"></span><br><span class="line">FV Space Information</span><br><span class="line">FVMAIN [99%Full] 5757312 total, 5757304 used, 8 free</span><br><span class="line">FVMAIN_COMPACT [70%Full] 2064384 total, 1445120 used, 619264 free</span><br><span class="line"></span><br><span class="line">- Done -</span><br><span class="line">Build end time: 01:03:40, Feb.20 2020</span><br><span class="line">Build total time: 00:01:45</span><br></pre></td></tr></table></figure><p>最终生成了大小为<code>7354028</code>(≈7.1 MB)的 <a href="/assets/Compile-EDK2-for-dipper/UEFI.img">UEFI.img</a></p><h1 id="0x03-引导测试"><a class="markdownIt-Anchor" href="#0x03-引导测试"></a> 0x03 引导测试</h1><p>虽然固件不算真正的“完整”（屏蔽了一个函数的功能），但是至少编译出来了。</p><p>使用fastboot命令引导：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wxx9248@DELL-VM-Ubuntu ~/w/edk2&gt; fastboot boot UEFI.img</span><br></pre></td></tr></table></figure><p>在闪过一大堆信息之后，手机进入了UEFI Shell，界面跟原作者编译的镜像相同。<br /><img src="/images/Compile-EDK2-for-dipper/UEFI_Success_Self-compiled.jpg" alt="引导成功" /><br /><video width=100% controls><br /><source src="/videos/Compile-EDK2-for-dipper/UEFI_Success_Self-compiled.mp4" type="video/mp4"><br />你的浏览器不支持HTML 5 😦<br /></video></p><p>但是这个镜像100%能引导入UEFI Shell，原作者提供的镜像有的时候可以引导成功，而有的时候就会报错。</p><p>至此，编译工作基本已经完毕。<br />但是函数链接失败的问题还是需要解决，否则可能会影响以后的系统稳定性。</p><p>全量自配置编译环境下载：<a href="/assets/Compile-EDK2-for-dipper/env.tar.xz">点我</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;前些时间，栗子酱（@Ritsu909）私下发给我一个小米8的&lt;a href=&quot;/assets/Compile-EDK2-for-dipper/MI8_UEFI.img&quot;&gt;UEFI固件&lt;/a&gt;和托管在Github上的&lt;a href=&quot;https://github.com/NekokeCore/edk2_dipper_SDM845_Xiaomi_mi_8&quot;&gt;源代码&lt;/a&gt;，说让我试一下。&lt;br /&gt;
刚好自己有这个机子，也已经解锁了，就准备试试，毕竟这个对我这个不怎么接触嵌入式（暂时）的人还是挺新奇的。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="工程编译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E5%B7%A5%E7%A8%8B%E7%BC%96%E8%AF%91/"/>
    
    
    <category term="EDK" scheme="https://blog.wxx9248.tk/tags/EDK/"/>
    
    <category term="ARM64" scheme="https://blog.wxx9248.tk/tags/ARM64/"/>
    
  </entry>
  
  <entry>
    <title>《Ever Free》 歌词翻译</title>
    <link href="https://blog.wxx9248.tk/2020/02/19/Ever-Free-Lyrics-Translation/"/>
    <id>https://blog.wxx9248.tk/2020/02/19/Ever-Free-Lyrics-Translation/</id>
    <published>2020-02-18T18:45:00.000Z</published>
    <updated>2021-04-29T16:55:50.554Z</updated>
    
    <content type="html"><![CDATA[<center>    <audio src="/audios/Ever-Free-Lyrics-Translation/Massive New Krew - Ever Free.mp3" controls="controls" preload="preload">    你的浏览器不支持HTML 5 :(    </audio></center><p>Open your mind<br />敞开心扉<br />Believe what I said<br />相信我言<br />It’s gonna be a brighter day<br />这将是更美好的一天<br />I never thought 'bout it before<br />我以前未曾想过<br />I’m waiting for you<br />我一直会等着你</p><span id="more"></span><p>どこまでも<br />不论在何时<br />どこまでも<br />不论在何地<br />広がる空の中<br />都如同置身于广阔的天空<br />駆け抜け<br />一起奔跑<br />歌うよ<br />一起歌唱<br />君とならば<br />和你在一起<br />Ever…<br />到永远</p><center>    -- 完 --</center>]]></content>
    
    
    <summary type="html">&lt;center&gt;
    &lt;audio src=&quot;/audios/Ever-Free-Lyrics-Translation/Massive New Krew - Ever Free.mp3&quot; controls=&quot;controls&quot; preload=&quot;preload&quot;&gt;
    你的浏览器不支持HTML 5 :(
    &lt;/audio&gt;
&lt;/center&gt;
&lt;p&gt;Open your mind&lt;br /&gt;
敞开心扉&lt;br /&gt;
Believe what I said&lt;br /&gt;
相信我言&lt;br /&gt;
It’s gonna be a brighter day&lt;br /&gt;
这将是更美好的一天&lt;br /&gt;
I never thought &#39;bout it before&lt;br /&gt;
我以前未曾想过&lt;br /&gt;
I’m waiting for you&lt;br /&gt;
我一直会等着你&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="人文" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/"/>
    
    <category term="自然语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/"/>
    
    <category term="翻译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="英语" scheme="https://blog.wxx9248.tk/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="歌词" scheme="https://blog.wxx9248.tk/tags/%E6%AD%8C%E8%AF%8D/"/>
    
    <category term="日语" scheme="https://blog.wxx9248.tk/tags/%E6%97%A5%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>《Unshakable》 歌词翻译</title>
    <link href="https://blog.wxx9248.tk/2020/02/19/Unshakable-Lyrics-Translation/"/>
    <id>https://blog.wxx9248.tk/2020/02/19/Unshakable-Lyrics-Translation/</id>
    <published>2020-02-18T18:20:00.000Z</published>
    <updated>2021-04-29T16:57:27.423Z</updated>
    
    <content type="html"><![CDATA[<center>    <audio src="/audios/Unshakable-Lyrics-Translation/RiraN - Unshakable.mp3" controls="controls" preload="preload">    你的浏览器不支持HTML 5 :(    </audio></center><p>When we’re alone and the world is gone<br />我们独处一地 世界不复存在<br />I turn to you, you’re my number one<br />我们执手相看 你是我的唯一<br />Good days and bad days can’t compare<br />寸寸光阴<br />To the feeling I have when I’ve got you there<br />在我遇到你时便黯然失色</p><span id="more"></span><p>So hold on so tightly, that you’ll never let me go<br />紧握双手 我们永不分离<br />Hold on so tightly, we won’t break if we explode<br />紧握双手 我们矢志不渝<br />Hold on so tightly, that you’ll never let me go<br />紧握双手 我们永不分离<br />Hold on so tightly, together we are unshakable<br />紧握双手 我们不可战胜</p><p>Unshakable<br />我们不可动摇</p><p>Unshakable<br />我们坚不可摧<br />We are unshakable<br />我们牢不可破<br />Unshakable<br />我们不可动摇</p><center>    -- 完 --</center>]]></content>
    
    
    <summary type="html">&lt;center&gt;
    &lt;audio src=&quot;/audios/Unshakable-Lyrics-Translation/RiraN - Unshakable.mp3&quot; controls=&quot;controls&quot; preload=&quot;preload&quot;&gt;
    你的浏览器不支持HTML 5 :(
    &lt;/audio&gt;
&lt;/center&gt;
&lt;p&gt;When we’re alone and the world is gone&lt;br /&gt;
我们独处一地 世界不复存在&lt;br /&gt;
I turn to you, you’re my number one&lt;br /&gt;
我们执手相看 你是我的唯一&lt;br /&gt;
Good days and bad days can’t compare&lt;br /&gt;
寸寸光阴&lt;br /&gt;
To the feeling I have when I’ve got you there&lt;br /&gt;
在我遇到你时便黯然失色&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="人文" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/"/>
    
    <category term="自然语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/"/>
    
    <category term="翻译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="英语" scheme="https://blog.wxx9248.tk/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="歌词" scheme="https://blog.wxx9248.tk/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>《Destr0yer》 歌词翻译</title>
    <link href="https://blog.wxx9248.tk/2020/02/19/Destr0yer-Lyrics-Translation/"/>
    <id>https://blog.wxx9248.tk/2020/02/19/Destr0yer-Lyrics-Translation/</id>
    <published>2020-02-18T18:14:00.000Z</published>
    <updated>2021-04-29T16:55:40.722Z</updated>
    
    <content type="html"><![CDATA[<center>    <audio src="/audios/Destr0yer-Lyrics-Translation/削除,Nikki Simmons - Destr0yer.mp3" controls="controls" preload="preload">    你的浏览器不支持HTML 5 :(    </audio></center><p>Ladies and gentlemen,<br />女士们先生们<br />let’s start<br />我们开始吧<br />tonight.<br />就在今晚</p><p>----*SAKUZYO BEAM*----&gt;<br />----削 除 射 线*----&gt;</p><span id="more"></span><p>I wonder why things have happened.<br />我在思索 这一切为何发生<br />Could you imagine the world is boring?<br />你能想像 这枯燥的世界吗<br />Stereotype, Sham, Brain Freeze, Collusion, Mental block<br />偏见 虚伪 脑冻 勾结 心锁<br />The world is fading.<br />世界将要枯萎<br />I know the fate.<br />我明白这归宿<br />The world is fading.<br />世界即将凋亡<br />I know the fate.<br />我知晓这结局</p><p>I, I know all of you.<br />我 了解你们所有人<br />Have you, you followed me?<br />但 你们跟随我了吗<br />Me in your mind is the dream,<br />在你心中 我不过是一场梦<br />the dream of the past.<br />一段过去的记忆<br />So I, I would forget you.<br />所以我会忘记你<br />Let you forget me.<br />也请你快忘掉我<br />'Cause I’m, I’m “Destr0yer”.<br />因为我即“毁灭者”</p><p>----*SAKUZYO BEAM*----&gt;<br />----削 除 射 线*----&gt;</p><p>I kill us all.<br />我要全部抹杀<br />It’s the only way.<br />这是唯一的办法<br />It’s over.<br />现在全部结束吧</p><p>I will kill.<br />我会大肆枭殄<br />I will destroy the world.<br />我会破坏这世界<br />No matter what you do, I don’t stop.<br />无论你做什么 我都不会停歇<br />I’m the only one who’s right.<br />我即绝对的真理</p><p>I will kill.<br />我会大肆戮灭<br />I will destroy the world.<br />我要摧毁这世界<br />No matter what you do, I don’t stop.<br />无论你做什么 我都不会停歇<br />It is what it is.<br />就是这样<br />It is what it is.<br />终将如此<br />It is not… It’s not my fault.<br />而这 不是我的错</p><p>----*SAKUZYO BEAM*----&gt;<br />----削 除 射 线*----&gt;</p><center>-- 终 --</center>]]></content>
    
    
    <summary type="html">&lt;center&gt;
    &lt;audio src=&quot;/audios/Destr0yer-Lyrics-Translation/削除,Nikki Simmons - Destr0yer.mp3&quot; controls=&quot;controls&quot; preload=&quot;preload&quot;&gt;
    你的浏览器不支持HTML 5 :(
    &lt;/audio&gt;
&lt;/center&gt;
&lt;p&gt;Ladies and gentlemen,&lt;br /&gt;
女士们先生们&lt;br /&gt;
let’s start&lt;br /&gt;
我们开始吧&lt;br /&gt;
tonight.&lt;br /&gt;
就在今晚&lt;/p&gt;
&lt;p&gt;----*SAKUZYO BEAM*----&amp;gt;&lt;br /&gt;
----削 除 射 线*----&amp;gt;&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="人文" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/"/>
    
    <category term="自然语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/"/>
    
    <category term="翻译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="英语" scheme="https://blog.wxx9248.tk/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="歌词" scheme="https://blog.wxx9248.tk/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>使用 Python 编写 Cloudflare DDNS 系统</title>
    <link href="https://blog.wxx9248.tk/2020/02/16/Project-Cloudflare-DDNS-System/"/>
    <id>https://blog.wxx9248.tk/2020/02/16/Project-Cloudflare-DDNS-System/</id>
    <published>2020-02-15T21:10:00.000Z</published>
    <updated>2021-04-29T16:57:05.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a class="markdownIt-Anchor" href="#0x00-前言"></a> 0x00 前言</h1><p>最近在学习Python语言。因为Python的功能库太过庞大，内置对象的常用函数的记忆成了一个问题。<br />所以准备开一个Python坑来将自己学到的理论知识付诸实践。</p><p>刚好发现原来的开MC服务器的时候，用批处理（对没错就是Windows的屑批处理）写过一个Cloudflare（以下简称CF）的DDNS脚本。<br />由于批处理处理JSON的时候非常不灵活，代码晦涩难懂，而且非常依赖于CF API返回JSON的结构。只要一点点不一样就可以出让你想不到的bug……<br />所以就打算把这个脚本用Python重写一版，以后或许自己还能用上。</p><span id="more"></span><h1 id="0x01-工程摘要"><a class="markdownIt-Anchor" href="#0x01-工程摘要"></a> 0x01 工程摘要</h1><ul><li>项目地址：<a href="https://github.com/wxx9248/Cloudflare-DDNS-System">https://github.com/wxx9248/Cloudflare-DDNS-Systems</a></li><li>界面语言：英文</li><li>当前版本：v2.0</li><li>实现语言：Python 3.8.1</li><li>支持平台：理论主流平台均支持。</li><li>开源协议：GPL v3</li><li>总代码量：904行</li><li>外来模块：<a href="https://pypi.org/project/pycryptodome">PyCryptodome</a></li></ul><h1 id="0x02-主要特性"><a class="markdownIt-Anchor" href="#0x02-主要特性"></a> 0x02 主要特性</h1><ul><li>多域名支持</li><li>IPv6支持</li><li>接受专用<code>API token</code>和全局<code>API key</code></li><li>使用<code>AES-EAX</code>加密<code>API token</code>或<code>API key</code></li><li>使用JSON存储配置，便于修改</li><li>我编不下去了</li></ul><h1 id="0x03-参数设置"><a class="markdownIt-Anchor" href="#0x03-参数设置"></a> 0x03 参数设置</h1><p>于<code>DDNSMon.py</code>：</p><ul><li>可修改变量<code>SLEEPSEC</code>：DDNS的轮询休眠时长，单位是秒。</li></ul><p>于<code>conf.json</code>：</p><table><thead><tr><th>键</th><th>值类型</th><th>描述</th><th>举例</th></tr></thead><tbody><tr><td><code>Zone-ID</code></td><td>字符串：32位 hex token</td><td>DNS Zone标识符</td><td><code>&quot;53f2f9875a13605a67a666e58353f549&quot;</code></td></tr><tr><td><code>Domains</code></td><td>字符串数组</td><td>目标域名</td><td><code>[&quot;ddns1.wxx9248.tk&quot;, &quot;ddns2.wxx9248.tk&quot;]</code></td></tr><tr><td><code>E-mail</code></td><td>字符串</td><td>CF帐户邮箱</td><td><code>&quot;wxx9248@wxx9248.tk&quot;</code></td></tr><tr><td><code>APIKey</code></td><td>字符串：32位 hex token 或 base64</td><td><code>API key</code> 或者 <code>API token</code></td><td><code>&quot;55c3047806f47ccd5dcb64c9cc2bcb50&quot;</code></td></tr></tbody></table><p>剩下的参数请不要直接修改，推荐将<code>conf.json</code>删除，然后进入程序，按照提示输入信息。</p><h1 id="0x04-使用方法"><a class="markdownIt-Anchor" href="#0x04-使用方法"></a> 0x04 使用方法</h1><ul><li>Windows：<ul><li>如果Python文件关联正确，直接双击<code>DDNSMon.py</code>运行即可。</li><li>如果此方法不行，参见下一种方法。</li></ul></li><li>其它系统（命令行操作）： <code>Python3 DDNSMon.py</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-前言&quot;&gt;&lt;/a&gt; 0x00 前言&lt;/h1&gt;
&lt;p&gt;最近在学习Python语言。因为Python的功能库太过庞大，内置对象的常用函数的记忆成了一个问题。&lt;br /&gt;
所以准备开一个Python坑来将自己学到的理论知识付诸实践。&lt;/p&gt;
&lt;p&gt;刚好发现原来的开MC服务器的时候，用批处理（对没错就是Windows的屑批处理）写过一个Cloudflare（以下简称CF）的DDNS脚本。&lt;br /&gt;
由于批处理处理JSON的时候非常不灵活，代码晦涩难懂，而且非常依赖于CF API返回JSON的结构。只要一点点不一样就可以出让你想不到的bug……&lt;br /&gt;
所以就打算把这个脚本用Python重写一版，以后或许自己还能用上。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="软件工程" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.wxx9248.tk/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>ZSTUOJ - DNA Translation</title>
    <link href="https://blog.wxx9248.tk/2019/11/09/Algorithm-DNA-Translation/"/>
    <id>https://blog.wxx9248.tk/2019/11/09/Algorithm-DNA-Translation/</id>
    <published>2019-11-08T17:45:00.000Z</published>
    <updated>2021-04-14T03:40:59.540Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-闲话"><a class="markdownIt-Anchor" href="#0x00-闲话"></a> 0x00 闲话</h1><p>好久都没有更新博客了啊……代码也要生草了……挑了个简单题练练手。<br />原题目：<a href="/pages/Algorithm-DNA-Translation/1512%20-%20DNA%20Translation.html">传送门</a></p><p><strong>先声明一下，这份代码我交上去没有AC，但是我实在是没找出什么bug，所以仅供参考……</strong><br />后面会说为啥这题目出的不好</p><span id="more"></span><p>题目要求很简单，就是把输入的DNA序列按照表格的规则转换成蛋白质序列，主要考察字符串处理。<br />代码核心采用mapping的方法，将trim后的RNA序列用一些数组映射到蛋白质字符串上，所以核心数据结构采用字符串指针数组。<br />先上代码吧。</p><h1 id="0x01-代码展示"><a class="markdownIt-Anchor" href="#0x01-代码展示"></a> 0x01 代码展示</h1><figure class="highlight c"><figcaption><span>1512.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// #define ONLINE_JUDGE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>STRAND_LEN 256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#define Svp0</span></span><br><span class="line"><span class="comment">#define Sv1</span></span><br><span class="line"><span class="comment">#define Sp2</span></span><br><span class="line"><span class="comment">#define S3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#define S0</span></span><br><span class="line"><span class="comment">#define Sp1</span></span><br><span class="line"><span class="comment">#define Svp2</span></span><br><span class="line"><span class="comment">#define Sv3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#define Sv0</span></span><br><span class="line"><span class="comment">#define Svp1</span></span><br><span class="line"><span class="comment">#define S2</span></span><br><span class="line"><span class="comment">#define Sp3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///*</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sv0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Svp1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sp2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S3</span></span><br><span class="line"><span class="comment">//*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> strands[<span class="number">4</span>][STRAND_LEN], mRNA[STRAND_LEN];</span><br><span class="line"><span class="keyword">char</span> mapv[<span class="number">128</span>], mapt[<span class="number">128</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> <span class="built_in">map</span>[<span class="number">4</span>][<span class="number">4</span>][<span class="number">4</span>] =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="comment">// U</span></span><br><span class="line">        &#123;  <span class="number">0</span>,  <span class="number">0</span>,  <span class="number">4</span>,  <span class="number">4</span> &#125;,<span class="comment">// U</span></span><br><span class="line">        &#123;  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">1</span> &#125;,<span class="comment">// C</span></span><br><span class="line">        &#123;  <span class="number">2</span>,  <span class="number">2</span>, <span class="number">-1</span>, <span class="number">-1</span> &#125;,<span class="comment">// A</span></span><br><span class="line">        &#123;  <span class="number">3</span>,  <span class="number">3</span>, <span class="number">-1</span>,  <span class="number">5</span> &#125;<span class="comment">// G</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="comment">// C</span></span><br><span class="line">        &#123;  <span class="number">4</span>,  <span class="number">4</span>,  <span class="number">4</span>,  <span class="number">4</span> &#125;,</span><br><span class="line">        &#123;  <span class="number">6</span>,  <span class="number">6</span>,  <span class="number">6</span>,  <span class="number">9</span> &#125;,</span><br><span class="line">        &#123;  <span class="number">7</span>,  <span class="number">7</span>,  <span class="number">9</span>,  <span class="number">9</span> &#125;,</span><br><span class="line">        &#123;  <span class="number">8</span>,  <span class="number">8</span>,  <span class="number">8</span>,  <span class="number">8</span> &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="comment">// A</span></span><br><span class="line">        &#123; <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">18</span> &#125;,</span><br><span class="line">        &#123; <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">11</span> &#125;,</span><br><span class="line">        &#123; <span class="number">12</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">13</span> &#125;,</span><br><span class="line">        &#123;  <span class="number">1</span>,  <span class="number">1</span>,  <span class="number">8</span>,  <span class="number">8</span> &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;<span class="comment">// G</span></span><br><span class="line">        &#123; <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span>, <span class="number">14</span> &#125;,</span><br><span class="line">        &#123; <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span>, <span class="number">15</span> &#125;,</span><br><span class="line">        &#123; <span class="number">16</span>, <span class="number">16</span>, <span class="number">19</span>, <span class="number">19</span> &#125;,</span><br><span class="line">        &#123; <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span>, <span class="number">17</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> *mapp[] =</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;Phe&quot;</span>, <span class="string">&quot;Ser&quot;</span>, <span class="string">&quot;Tyr&quot;</span>, <span class="string">&quot;Cys&quot;</span>,<span class="comment">//  0,  1,  2,  3</span></span><br><span class="line">    <span class="string">&quot;Leu&quot;</span>, <span class="string">&quot;Trp&quot;</span>, <span class="string">&quot;Pro&quot;</span>, <span class="string">&quot;His&quot;</span>,<span class="comment">//  4,  5,  6,  7</span></span><br><span class="line">    <span class="string">&quot;Arg&quot;</span>, <span class="string">&quot;Gln&quot;</span>, <span class="string">&quot;Ile&quot;</span>, <span class="string">&quot;Thr&quot;</span>,<span class="comment">//  8,  9, 10, 11</span></span><br><span class="line">    <span class="string">&quot;Asn&quot;</span>, <span class="string">&quot;Lys&quot;</span>, <span class="string">&quot;Val&quot;</span>, <span class="string">&quot;Ala&quot;</span>,<span class="comment">// 12, 13, 14, 15</span></span><br><span class="line">    <span class="string">&quot;Asp&quot;</span>, <span class="string">&quot;Gly&quot;</span>, <span class="string">&quot;Met&quot;</span>, <span class="string">&quot;Glu&quot;</span><span class="comment">// 16, 17, 18, 19</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mapinit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mapv[<span class="string">&#x27;A&#x27;</span>] = <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">    mapv[<span class="string">&#x27;T&#x27;</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    mapv[<span class="string">&#x27;C&#x27;</span>] = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">    mapv[<span class="string">&#x27;G&#x27;</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    mapt[<span class="string">&#x27;U&#x27;</span>] = <span class="number">0</span>;</span><br><span class="line">    mapt[<span class="string">&#x27;C&#x27;</span>] = <span class="number">1</span>;</span><br><span class="line">    mapt[<span class="string">&#x27;A&#x27;</span>] = <span class="number">2</span>;</span><br><span class="line">    mapt[<span class="string">&#x27;G&#x27;</span>] = <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">size_t</span> <span class="title">translate</span><span class="params">(<span class="keyword">char</span> *pchain[], <span class="keyword">char</span> *mRNA, <span class="keyword">size_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">size_t</span> l = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pchain &amp;&amp; mRNA &amp;&amp; len &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (l = <span class="number">0</span>; (l + <span class="number">1</span>) * <span class="number">3</span> &lt;= len &amp;&amp; <span class="number">-1</span> != <span class="built_in">map</span>[mapt[mRNA[l * <span class="number">3</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">1</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">2</span>]]]; ++l)</span><br><span class="line">            pchain[l] = mapp[<span class="built_in">map</span>[mapt[mRNA[l * <span class="number">3</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">1</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">2</span>]]]];</span><br><span class="line"></span><br><span class="line">        pchain[l] = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printchain</span><span class="params">(<span class="keyword">char</span> *pchain[], <span class="keyword">size_t</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pchain &amp;&amp; pchain[<span class="number">1</span>] &amp;&amp; len &gt;= <span class="number">3</span>)<span class="comment">// It seems that we don&#x27;t have to print the first &quot;Met&quot; out...</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fputs</span>(pchain[<span class="number">1</span>], <span class="built_in">stdout</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; len &amp;&amp; pchain[i]; ++i)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;-%s&quot;</span>, pchain[i]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    mapinit();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">char</span> *prime, *start, *end;</span><br><span class="line">    <span class="keyword">char</span> *pchain[STRAND_LEN / <span class="number">3</span> + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">size_t</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span>i, j;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (;;)</span><br><span class="line">    &#123;</span><br><span class="line">        prime = end = <span class="literal">NULL</span>;</span><br><span class="line">        <span class="built_in">memset</span>(pchain, <span class="number">0x0</span>, STRAND_LEN / <span class="number">3</span> + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; STRAND_LEN &amp;&amp; (c = getchar()) != <span class="string">&#x27;\n&#x27;</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&#x27;*&#x27;</span> == c)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            strands[S][i] = c;</span><br><span class="line">            strands[Sv][i] = mapv[strands[S][i]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!i)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        strands[S][i] = strands[Sv][i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        len = i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            strands[Sp][i] = strands[S][len - i - <span class="number">1</span>];</span><br><span class="line">            strands[Svp][i] = strands[Sv][len - i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        strands[Sp][i] = strands[Svp][i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">            <span class="built_in">puts</span>(strands[i]);</span><br><span class="line">        getchar();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">            <span class="keyword">if</span> (start = <span class="built_in">strstr</span>(strands[i], <span class="string">&quot;ATG&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">size_t</span> max = <span class="built_in">strlen</span>(start) / <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; max; ++j)</span><br><span class="line">                    <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(start + j * <span class="number">3</span>, <span class="string">&quot;TAA&quot;</span>, <span class="number">3</span>) || !<span class="built_in">strncmp</span>(start + j * <span class="number">3</span>, <span class="string">&quot;TAG&quot;</span>, <span class="number">3</span>) || !<span class="built_in">strncmp</span>(start + j * <span class="number">3</span>, <span class="string">&quot;TGA&quot;</span>, <span class="number">3</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        prime = start;</span><br><span class="line">                        end = start + j * <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">goto</span> BreakAll;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    BreakAll:</span><br><span class="line">        <span class="keyword">if</span> (!(prime &amp;&amp; end))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;*** No translatable DNA found ***&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; end - start + <span class="number">3</span>; ++j)</span><br><span class="line">            prime[j] == <span class="string">&#x27;T&#x27;</span> ? mRNA[j] = <span class="string">&#x27;U&#x27;</span> : (mRNA[j] = prime[j]);</span><br><span class="line">        mRNA[j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">        <span class="built_in">puts</span>(mRNA);</span><br><span class="line">        getchar();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">        len = translate(pchain, mRNA, j);</span><br><span class="line">        printchain(pchain, len);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="0x02-代码解释"><a class="markdownIt-Anchor" href="#0x02-代码解释"></a> 0x02 代码解释</h1><p>先说说核心变量和函数吧：<br /><code>mapv[]</code> 可以将一个DNA序列映射到其互补链；<br /><code>mapt[]</code> 将RNA序列的上的一个密码子其中的一个碱基映射到map的一个下标；<br /><code>map[][][]</code> 是由上述下标确定的一个蛋白质编码表；<br /><code>mapp[]</code> 将蛋白质编码映射到蛋白质字符串。<br />所以<code>translate()</code>函数中的这一行也就很好理解了<del>（禁 止 套 娃）</del>：</p><figure class="highlight c"><figcaption><span>1512-excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (l = <span class="number">0</span>; (l + <span class="number">1</span>) * <span class="number">3</span> &lt;= len &amp;&amp; <span class="number">-1</span> != <span class="built_in">map</span>[mapt[mRNA[l * <span class="number">3</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">1</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">2</span>]]]; ++l)</span><br><span class="line">    pchain[l] = mapp[<span class="built_in">map</span>[mapt[mRNA[l * <span class="number">3</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">1</span>]]][mapt[mRNA[l * <span class="number">3</span> + <span class="number">2</span>]]]];</span><br></pre></td></tr></table></figure><p><code>translate()</code>函数将每个映射结果（<code>char *</code>）依次赋值给指针数组<code>pchain[]</code>，遇到终止密码子则停止过程，返回数组实际长度；<br /><code>printchain()</code>函数将<code>pchain[]</code>里的结果格式化输出。</p><h1 id="0x03-main流程"><a class="markdownIt-Anchor" href="#0x03-main流程"></a> 0x03 main()流程</h1><p>程序首先同时读入原始DNA序列及其互补链（检测到*就终止）。</p><figure class="highlight c"><figcaption><span>1512-excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!i)</span><br><span class="line">    <span class="keyword">continue</span>;</span><br></pre></td></tr></table></figure><p>此代码段用于屏蔽空行输入，不加的话会输出<code>*** No translatable DNA found ***</code>。</p><p>接下来程序倒序赋值，得到原始DNA链和互补链的反向链（应题目要求，这四条链需要以特定顺序依次测试<del>，但是我网上找了很多顺序都不对</del>）。</p><figure class="highlight c"><figcaption><span>1512-excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; ++i)</span><br><span class="line">&#123;</span><br><span class="line">    strands[Sp][i] = strands[S][len - i - <span class="number">1</span>];</span><br><span class="line">    strands[Svp][i] = strands[Sv][len - i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序按<code>strands[]</code>下标依次递增的顺序进行DNA链的截取。</p><figure class="highlight c"><figcaption><span>1512-excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">    <span class="keyword">if</span> (start = <span class="built_in">strstr</span>(strands[i], <span class="string">&quot;ATG&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">size_t</span> max = <span class="built_in">strlen</span>(start) / <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; max; ++j)</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">strncmp</span>(start + j * <span class="number">3</span>, <span class="string">&quot;TAA&quot;</span>, <span class="number">3</span>) || !<span class="built_in">strncmp</span>(start + j * <span class="number">3</span>, <span class="string">&quot;TAG&quot;</span>, <span class="number">3</span>) || !<span class="built_in">strncmp</span>(start + j * <span class="number">3</span>, <span class="string">&quot;TGA&quot;</span>, <span class="number">3</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                prime = start;</span><br><span class="line">                end = start + j * <span class="number">3</span>;</span><br><span class="line">                <span class="keyword">goto</span> BreakAll;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>先在各个DNA链中检测ATG（转为mRNA后为AUG，起始密码子），随后再测试是否有<strong>合法</strong>的终止密码子，同时利用<code>start(prime)</code>指针和end指针进行DNA链的截取。<br /><strong>合法</strong>的终止密码子指非重叠依次读取三个碱基，检测是否有“TAA”、“TAG”和“TGA”。<br />检测出后将链字符串地址赋值到<code>prime</code>指针，未检测到则<code>prime &amp;&amp; end</code>一定为假。<br />不要问我为啥用<code>goto</code>，合适的时候就用，只要能让你的程序更简洁明了。这里使用<code>goto</code>是为了跳出多层循环。</p><p>测试顺序在程序头定义：</p><figure class="highlight c"><figcaption><span>1512-excerpt.c</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#define Svp0</span></span><br><span class="line"><span class="comment">#define Sv1</span></span><br><span class="line"><span class="comment">#define Sp2</span></span><br><span class="line"><span class="comment">#define S3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#define S0</span></span><br><span class="line"><span class="comment">#define Sp1</span></span><br><span class="line"><span class="comment">#define Svp2</span></span><br><span class="line"><span class="comment">#define Sv3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">#define Sv0</span></span><br><span class="line"><span class="comment">#define Svp1</span></span><br><span class="line"><span class="comment">#define S2</span></span><br><span class="line"><span class="comment">#define Sp3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///*</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sv0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Svp1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Sp2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S3</span></span><br><span class="line"><span class="comment">//*/</span></span><br></pre></td></tr></table></figure><p>跳出循环后，检测<code>prime &amp;&amp; end</code>的逻辑值，不赘述。<br />如果为真，进行mRNA转换，将T替换为U。</p><p>随后，调用<code>translate()</code>函数，将<code>pchain[]</code>头地址，mRNA起始地址，mRNA长度传入，得到蛋白质序列长度len和蛋白质链<code>pchain[]</code>。<br />调用<code>printchain()</code>函数，将结果打印在终端上，一次转换过程结束。</p><h1 id="0x04-吐槽"><a class="markdownIt-Anchor" href="#0x04-吐槽"></a> 0x04 吐槽</h1><p>题目要求对每次输入测试4种情况，而原题目并没有指明先测试哪条链，这造成了多重结果，即一个输入可以有多个可行解。<br />随后发现在HINT部分附加了测试顺序，但是……反正我是没有跑出来正确结果……手算了一遍，也是程序跑出来的结果，而不是它给出的样本输出……<br />在某在线OJ底下的评论区，有人给出了不同的测试顺序（也就是现在我程序上启用的那个），样本输出全部对上了，但是还是WA……<br />怀疑程序有bug，但是我是真的没有查出来……我太菜了对不起</p><p>还有几个生物学上的问题：<br />首先，我确认了一下我的记忆没问题，起始密码子有两个，AUG和GUG，分别对应甲硫氨酸和缬氨酸，但是题目上起始密码子只有AUG一个。<br />其次，起始密码子翻译蛋白质，而不是题目所说起始密码子不翻译蛋白质，即所有的输出样本前都应该有个Met（甲硫氨酸）。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;0x00-闲话&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#0x00-闲话&quot;&gt;&lt;/a&gt; 0x00 闲话&lt;/h1&gt;
&lt;p&gt;好久都没有更新博客了啊……代码也要生草了……挑了个简单题练练手。&lt;br /&gt;
原题目：&lt;a href=&quot;/pages/Algorithm-DNA-Translation/1512%20-%20DNA%20Translation.html&quot;&gt;传送门&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先声明一下，这份代码我交上去没有AC，但是我实在是没找出什么bug，所以仅供参考……&lt;/strong&gt;&lt;br /&gt;
后面会说为啥这题目出的不好&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="算法" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="C" scheme="https://blog.wxx9248.tk/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《Sticks &amp; Stones》 歌词翻译</title>
    <link href="https://blog.wxx9248.tk/2019/08/26/Sticks-and-Stones-Lyrics-Translation/"/>
    <id>https://blog.wxx9248.tk/2019/08/26/Sticks-and-Stones-Lyrics-Translation/</id>
    <published>2019-08-26T10:07:00.000Z</published>
    <updated>2021-04-29T16:57:17.427Z</updated>
    
    <content type="html"><![CDATA[<center>    <audio src="/audios/Sticks-and-Stones-Lyrics-Translation/Jónsi & John Powell - Sticks & Stones.mp3" controls="controls" preload="preload">        你的浏览器不支持HTML 5 :(    </audio></center><p>Eyes open wide, blinded by the sun now<br />睁大双眼 尽管被阳光照得刺痛<br />Orange and white, dark red, green and yellow<br />橘红 白色 深红 绿色和黄色<br />Rainbow colors! Do not hide, see the view!<br />那是彩虹的颜色 不要藏匿 去俯瞰风景<br />Step aside, go through!<br />跨过障碍 去拥抱心灵</p><span id="more"></span><p>Against the light, too strong, blow a fuse now<br />逆着阳光 尽管耀眼 准备大展身手<br />Everything bright, new songs, burning shoes<br />一切灿烂 新的歌曲 燃烧你的脚步<br />The look in your eyes! Break our bones into half!<br />你眼中神采 让我们为之倾倒<br />Scream and shout and do laugh!<br />放肆的尖叫 尽情的大笑</p><p>Let yourself… go (Oh Oh Oh)<br />让自己 飞翔<br />Let yourself… go (Oh Oh Oh)<br />让自己 飞翔</p><p>Stay close to me<br />紧跟着我<br />Count one, two and three<br />一起数 一 二 三<br />Up in through your sleeves<br />穿过拂袖<br />Bursting through the seams<br />冲破缝隙<br />Open your eyes and see - You’ll see<br />睁大双眼去看 你会发现</p><p>(Icelandic)<br />（冰岛语）<br />Inn um ermar, upp hryggjarsúluna<br />穿过衣袖 飞过脊背<br />Yfir skóg, flæðir niður brekkuna<br />越过丛林 跨过山峦<br />Allt upp í loft! Ég mun aldrei gleyma!<br />在那空中 我不会忘<br />Því ég mun aldrei!<br />永远不会忘记</p><p>Hleypur um, rífur, leysir flækjurnar<br />奔向前方 不顾擦伤 挣脱束缚<br />(Upp með rótum) Með blik í augum!<br />（从根向上）眼中闪耀着光芒<br />Stórmerki, undur, brjótum bein í sundur!<br />创造奇迹 冲破险阻</p><p>Let yourself… go (Oh Oh Oh)<br />让自己 飞翔<br />Let yourself… go (Oh Oh Oh)<br />让自己 飞翔</p><p>Stay close to me<br />紧跟着我<br />Count one, two and three<br />一起数 一 二 三<br />Up in through your sleeves<br />穿过拂袖<br />Bursting through the seams<br />冲破缝隙<br />Open your eyes and see<br />睁大双眼去看</p><p>Stay close to me<br />紧跟着我<br />Count one, two and three<br />一起数 一 二 三<br />Up in through your sleeves<br />穿过你的拂袖<br />Right beyond the trees<br />飞翔在树林之巅<br />Show you how you’ll be<br />告诉自己 你的实力</p><p>Stay close to me<br />紧跟着我<br />Count one, two and three<br />一起数 一 二 三<br />Up in through your sleeves<br />穿过拂袖<br />Bursting through the seams<br />冲破缝隙<br />Open your eyes and see - You’ll see<br />睁大双眼去看 你会发现</p><p>Stay close to me<br />紧跟着我<br />Count one, two, three<br />一起数 一 二 三<br />Up in through your sleeves<br />穿过你的拂袖<br />You’re right behind me<br />你就在我的身后</p><p>Stay close to me<br />紧跟着我<br />Count one, two, three<br />一起数 一 二 三<br />Up in through your sleeves<br />穿过拂袖<br />Bursting through the seams<br />冲破缝隙<br />Open your eyes and see<br />睁大你的双眼<br />You’ll see (You’ll see…)<br />你会发现 （你会发现……）</p><center>-- 完 --</center>]]></content>
    
    
    <summary type="html">&lt;center&gt;
    &lt;audio src=&quot;/audios/Sticks-and-Stones-Lyrics-Translation/Jónsi &amp; John Powell - Sticks &amp; Stones.mp3&quot; controls=&quot;controls&quot; preload=&quot;preload&quot;&gt;
        你的浏览器不支持HTML 5 :(
    &lt;/audio&gt;
&lt;/center&gt;
&lt;p&gt;Eyes open wide, blinded by the sun now&lt;br /&gt;
睁大双眼 尽管被阳光照得刺痛&lt;br /&gt;
Orange and white, dark red, green and yellow&lt;br /&gt;
橘红 白色 深红 绿色和黄色&lt;br /&gt;
Rainbow colors! Do not hide, see the view!&lt;br /&gt;
那是彩虹的颜色 不要藏匿 去俯瞰风景&lt;br /&gt;
Step aside, go through!&lt;br /&gt;
跨过障碍 去拥抱心灵&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="人文" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/"/>
    
    <category term="自然语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/"/>
    
    <category term="翻译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="英语" scheme="https://blog.wxx9248.tk/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="歌词" scheme="https://blog.wxx9248.tk/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>用MinGW和MSVC工具链编译FFmpeg静态链接库</title>
    <link href="https://blog.wxx9248.tk/2019/07/25/Compile-FFmpeg-Static-Library-with-MSVC-Toolchain-and-MinGW/"/>
    <id>https://blog.wxx9248.tk/2019/07/25/Compile-FFmpeg-Static-Library-with-MSVC-Toolchain-and-MinGW/</id>
    <published>2019-07-25T11:04:00.000Z</published>
    <updated>2021-04-29T16:55:14.057Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写的一个工程里面需要用到<code>FFmpeg</code>的静态链接库，<br />但是<code>FFmpeg</code>官方只提供动态库和源代码。</p><p>于是，本着自己动手丰衣足食和顺带提高自己的姿势水平的想法，<br />我自己编译了一份<code>FFmpeg</code>的静态链接库，并在此记录过程，供参考。</p><span id="more"></span><p>首先说说为什么需要MinGW环境：</p><p><code>FFmpeg</code>工程采用的是Linux上典型的<code>configure</code> + <code>make</code>的方式来进行工程管理的，<br />而<code>configure</code>是Linux Shell脚本，Windows无法直接执行，这就需要MinGW提供的sh来解释执行了。</p><p>但是，同时采用MSVC工具链和MinGW环境会有一个比较大的矛盾：</p><ol><li>如果采用用<code>vcvarsall.bat</code>初始化的普通的Windows命令行，那么就无法执行<code>configure</code>来配置<code>make</code>；</li><li>如果采用了MinGW的MinTTY进行编译，那就无法用<code>vcvarsall.bat</code>初始化MSVC工具链环境，导致<code>configure</code>找不到MSVC环境。</li></ol><p>对此，网上有人提供的办法是，在<code>msys.bat</code>的开头CALL一下<code>vcvarsall.bat</code>，但是新版msys貌似不领情：在开头如果调用<code>vcvarsall.bat</code>，MinTTY会直接闪退。</p><p>所以，我自己想了个办法：<br />先用<code>vcvarsall.bat</code>初始化MSVC工具链环境，再直接调用MinGW里面的sh加载<code>configure</code>。<br />就像这样（我已经将他们加入了环境变量，方便使用）：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\FFmpeg-n4.1.4&gt;vcvars32</span><br><span class="line">**********************************************************************</span><br><span class="line">** Visual Studio 2017 Developer Command Prompt v15.9.12</span><br><span class="line">** Copyright (c) 2017 Microsoft Corporation</span><br><span class="line">**********************************************************************</span><br><span class="line">[vcvarsall.bat] Environment initialized for: &#39;x86&#39;</span><br><span class="line"></span><br><span class="line">E:\FFmpeg-n4.1.4&gt; sh .&#x2F;configure [parameters]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这样一来，这个问题便迎刃而解了。</p><p>其次，<code>configure</code>的参数也非常重要，我前几次编译的时候参数没有调对，费了不少功夫……</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\FFmpeg-n4.1.4&gt; sh .&#x2F;configure --target-os&#x3D;win32 --disable-debug --enable-static --prefix&#x3D;.&#x2F;vs2017_build_static --toolchain&#x3D;msvc</span><br></pre></td></tr></table></figure><p>如果<code>configure</code>提示<code>./configure: cmp: command not found</code>，请在<strong>MSYS</strong>*里安装<code>diffutils</code>。<br />如果一切正常，在<code>configure</code>执行完毕后，可以将根目录中的<code>config.h</code>转换为UTF-8编码，要不然CL在编译的时候会持续提示编码有问题。在一切准备妥当之后，我们就可以执行期待已久的<code>make</code>了。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">E:\FFmpeg-n4.1.4&gt; make</span><br></pre></td></tr></table></figure><p>在编译过后，在每个对应文件夹中会生成<code>.a</code>文件，此时这些文件已经可以进行链接了。<br />如果你有强迫症，可以将开头的<code>lib</code>去掉，将其扩展名改为<code>.lib</code>。</p><p>至此，<code>FFmpeg</code>的编译过程就结束了。</p><p>编译出来的库可能依赖下列项目，不引用这些的话会爆<code>LNK2001</code>或者<code>LNK2019</code>：</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;bcrypt.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;ws2_32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;secur32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;gdi32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;version.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;imm32.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;setupapi.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;strmiids.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;quartz.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;vfw32.lib&quot;</span>)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在写的一个工程里面需要用到&lt;code&gt;FFmpeg&lt;/code&gt;的静态链接库，&lt;br /&gt;
但是&lt;code&gt;FFmpeg&lt;/code&gt;官方只提供动态库和源代码。&lt;/p&gt;
&lt;p&gt;于是，本着自己动手丰衣足食和顺带提高自己的姿势水平的想法，&lt;br /&gt;
我自己编译了一份&lt;code&gt;FFmpeg&lt;/code&gt;的静态链接库，并在此记录过程，供参考。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="应用" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/"/>
    
    <category term="工程编译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E5%BA%94%E7%94%A8/%E5%B7%A5%E7%A8%8B%E7%BC%96%E8%AF%91/"/>
    
    
    <category term="FFmpeg" scheme="https://blog.wxx9248.tk/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>C++11 新特性 - 基于范围的For循环</title>
    <link href="https://blog.wxx9248.tk/2019/07/02/CPP11-Range-Base-for-Loop/"/>
    <id>https://blog.wxx9248.tk/2019/07/02/CPP11-Range-Base-for-Loop/</id>
    <published>2019-07-02T08:37:00.000Z</published>
    <updated>2021-04-29T16:55:22.031Z</updated>
    
    <content type="html"><![CDATA[<p>C++11 新增了循环格式：基于范围的for循环。<br />主要可以简化对容器类数据对象的<strong>逐元素</strong>遍历操作。</p><span id="more"></span><p>直接举一个简单的栗子：</p><figure class="highlight cpp"><figcaption><span>new-for-loop.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> std::cout;</span><br><span class="line">    <span class="keyword">using</span> std::endl;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x: arr)</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>运行结果</span></figcaption><table><tr><td class="code"><pre><span class="line">C:\Users\wxx9248\Desktop&gt;g++ -o new-for-loop.exe new-for-loop.cpp</span><br><span class="line"></span><br><span class="line">C:\Users\wxx9248\Desktop&gt;new-for-loop</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">C:\Users\wxx9248\Desktop&gt;</span><br></pre></td></tr></table></figure><p>在第<code>i</code>次循环中，<code>x</code>都被<strong>赋值</strong>为<code>arr[i]</code>，然后执行循环体。<br></p><p>如果需要<strong>改变</strong>原容器的值呢？C++的<strong>引用</strong>就可以派上用场了。栗子：</p><figure class="highlight cpp"><figcaption><span>new-for-loop-reference.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> std::cout;</span><br><span class="line">    <span class="keyword">using</span> std::endl;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> &amp;x: arr)</span><br><span class="line">        x = x + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 为了避免变量作用域的影响，这里将数据处理和输出分开</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> &amp;x: arr)</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>运行结果</span></figcaption><table><tr><td class="code"><pre><span class="line">C:\Users\wxx9248\Desktop&gt;g++ -o new-for-loop-reference.exe new-for-loop-reference.cpp</span><br><span class="line"></span><br><span class="line">C:\Users\wxx9248\Desktop&gt;new-for-loop-reference</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">6</span><br><span class="line"></span><br><span class="line">C:\Users\wxx9248\Desktop&gt;</span><br></pre></td></tr></table></figure><p>你甚至可以在for循环内，用列表初始化直接定义匿名<strong>常量</strong>数组。栗子：</p><figure class="highlight cpp"><figcaption><span>new-for-loop-anonymous.cpp</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> std::cout;</span><br><span class="line">    <span class="keyword">using</span> std::endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x: &#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span> &#125;)</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x: &#123; <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">5</span> &#125;)</span><br><span class="line">    &#123;</span><br><span class="line">        ++x;</span><br><span class="line">        cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>运行结果</span></figcaption><table><tr><td class="code"><pre><span class="line">C:\Users\wxx9248\Desktop&gt;g++ -o new-for-loop-anonymous.exe new-for-loop-anonymous.cpp</span><br><span class="line"></span><br><span class="line">C:\Users\wxx9248\Desktop&gt;new-for-loop-anonymous</span><br><span class="line">2 3 4 7 8 9 5</span><br><span class="line">3 4 5 8 9 10 6</span><br><span class="line"></span><br><span class="line">C:\Users\wxx9248\Desktop&gt;</span><br></pre></td></tr></table></figure><p>栗子再次证明，<code>x</code>是一个变量，不是数组的引用。若强制进行引用（<code>int &amp;x</code>），那么编译器会报错：</p><figure class="highlight plain"><figcaption><span>编译器输出</span></figcaption><table><tr><td class="code"><pre><span class="line">new-for-loop-anonymous.cpp: In function &#39;int main()&#39;:</span><br><span class="line">new-for-loop-anonymous.cpp:7:37: error: binding reference of type &#39;int&amp;&#39; to &#39;const int&#39; discards qualifiers</span><br><span class="line">    7 |  for (int &amp;x: &#123; 2, 3, 4, 7, 8, 9, 5 &#125;)</span><br><span class="line">    |</span><br></pre></td></tr></table></figure><p>因为数组为常量数组，所以必须使用常量的引用方式<code>const int &amp;</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;C++11 新增了循环格式：基于范围的for循环。&lt;br /&gt;
主要可以简化对容器类数据对象的&lt;strong&gt;逐元素&lt;/strong&gt;遍历操作。&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="计算机" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    <category term="计算机语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/"/>
    
    
    <category term="C++" scheme="https://blog.wxx9248.tk/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>《Star Sky》 歌词翻译</title>
    <link href="https://blog.wxx9248.tk/2019/06/28/Star-Sky-Lyrics-Translation/"/>
    <id>https://blog.wxx9248.tk/2019/06/28/Star-Sky-Lyrics-Translation/</id>
    <published>2019-06-28T05:25:00.000Z</published>
    <updated>2021-04-29T16:57:11.379Z</updated>
    
    <content type="html"><![CDATA[<center>    <audio src="/audios/Star-Sky-Lyrics-Translation/Two Steps From Hell - Star Sky.mp3" controls="controls" preload="preload">        你的浏览器不支持HTML 5 :(    </audio></center><p>Here we are<br />我们于此<br />Riding the sky<br />凌驾天际<br />Painting the night with sun<br />染夜空以晨曦</p><span id="more"></span><p>You and I<br />镜中光影<br />Mirrors of light<br />辉映着我与你<br />Twin flames of fire<br />彷佛两团烈焰<br />Lit in another time and place<br />点燃于时空之隙</p><p>I knew your name<br />我曾知你姓名<br />I knew your face<br />也曾晓你神形<br />Your love and grace<br />与你的爱和恩情</p><p>Past and present now embrace<br />前世与今生交织<br />Worlds collide in inner space<br />世界在内心激荡<br />Unstoppable, the song we play<br />我们唱响的颂歌 势不可挡</p><p>Burn the page for me<br />点燃承载我昔时的书页<br />I cannot erase the time of sleep<br />我不能抹去沉睡的时间<br />I cannot be loved so set me free<br />我与爱无缘 所以请给我自由<br />I cannot deliver your love<br />我也不能承受你的爱恋<br />Or caress your soul so<br />或者抚慰你的灵魂 那<br />Turn that page for me<br />翻过写满我记忆的诗篇<br />I cannot embrace the touch that you give<br />我不能直面你给的体贴<br />I cannot find solace in your words<br />我得不到慰藉 于你字里行间<br />I cannot deliver you your love<br />我也不能报答你的爱恋<br />Or caress your soul<br />或者抚慰你的灵魂</p><p>Age to age<br />时光荏苒<br />I feel the call<br />我听到这呼唤<br />Memory of future dreams<br />来自梦中的记忆<br />You and I<br />我和你<br />Riding the sky<br />遨游天际<br />Keeping the fire bright<br />让火焰永不熄<br />From another time and place<br />于彼时彼地</p><p>I knew your name<br />我曾知你姓名<br />I knew your face<br />也曾晓你神形<br />Your touch and grace<br />与你的体贴和恩情</p><p>All of time can not erase<br />时间也无法消除<br />What our hearts remember stays<br />我们心中的记忆<br />Forever on a song we play<br />它永存于 我们的颂歌里</p><p>Burn the page for me<br />点燃承载我昔时的书页<br />I cannot erase the time of sleep<br />我不能抹去沉睡的时间<br />I cannot be loved so set me free<br />我与爱无缘 所以请给我自由<br />I cannot deliver your love<br />我也不能承受你的爱恋<br />Or caress your soul so<br />或者抚慰你的灵魂 那<br />Turn that page for me<br />翻过写满我记忆的诗篇<br />I cannot embrace the touch that you give<br />我不能直面你给的体贴<br />I cannot find solace in your words<br />我得不到慰藉 于你字里行间<br />I cannot deliver you your love<br />我也不能报答你的爱恋<br />Or caress your soul<br />或者抚慰你的灵魂</p><center>-- 完 --</center>]]></content>
    
    
    <summary type="html">&lt;center&gt;
    &lt;audio src=&quot;/audios/Star-Sky-Lyrics-Translation/Two Steps From Hell - Star Sky.mp3&quot; controls=&quot;controls&quot; preload=&quot;preload&quot;&gt;
        你的浏览器不支持HTML 5 :(
    &lt;/audio&gt;
&lt;/center&gt;
&lt;p&gt;Here we are&lt;br /&gt;
我们于此&lt;br /&gt;
Riding the sky&lt;br /&gt;
凌驾天际&lt;br /&gt;
Painting the night with sun&lt;br /&gt;
染夜空以晨曦&lt;/p&gt;</summary>
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    <category term="人文" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/"/>
    
    <category term="自然语言" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/"/>
    
    <category term="翻译" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/%E4%BA%BA%E6%96%87/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80/%E7%BF%BB%E8%AF%91/"/>
    
    
    <category term="英语" scheme="https://blog.wxx9248.tk/tags/%E8%8B%B1%E8%AF%AD/"/>
    
    <category term="歌词" scheme="https://blog.wxx9248.tk/tags/%E6%AD%8C%E8%AF%8D/"/>
    
  </entry>
  
  <entry>
    <title>Hello World - Again?</title>
    <link href="https://blog.wxx9248.tk/2019/06/22/Hello-world/"/>
    <id>https://blog.wxx9248.tk/2019/06/22/Hello-world/</id>
    <published>2019-06-21T23:17:00.000Z</published>
    <updated>2021-04-29T16:56:36.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="涅槃重生"><a class="markdownIt-Anchor" href="#涅槃重生"></a> 涅槃·重生</h2><center>服务器内核崩溃，所有的日志毁于一旦。</center><center>但ww并没有气馁</center><center>他寻求了Hexo和Github Pages的帮助，将日志尽数托管于此。</center><center>2019/6/22 07:17 通宵</center>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;涅槃重生&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#涅槃重生&quot;&gt;&lt;/a&gt; 涅槃·重生&lt;/h2&gt;
&lt;center&gt;服务器内核崩溃，所有的日志毁于一旦。&lt;/center&gt;
&lt;center&gt;但ww并没有气馁&lt;/center&gt;
&lt;cente</summary>
      
    
    
    
    <category term="根" scheme="https://blog.wxx9248.tk/categories/%E6%A0%B9/"/>
    
    
  </entry>
  
</feed>
